{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "SCCU-EU-Data-Factory-NonProd"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/UAT_OfflineDestination_NextlyCrossAccounts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUUAT_OfflineModeDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OfflineServices_DataSets/UAT_Offline/UAT_Destination"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountNumber",
						"type": "varchar"
					},
					{
						"name": "CurrentBalance",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "BalanceCategoryCodeEscrow",
						"type": "varchar"
					},
					{
						"name": "CurrentBalanceEscrow",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "BalanceCategoryCodeUnapplied",
						"type": "varchar"
					},
					{
						"name": "CurrentBalanceUnapplied",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "BalanceCategoryCodeLoanInProcess",
						"type": "varchar"
					},
					{
						"name": "CurrentBalanceLoanInProcess",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "NextPaymentDueDate",
						"type": "date"
					},
					{
						"name": "CurrentDueDate",
						"type": "date"
					},
					{
						"name": "LastPaymentDate",
						"type": "date"
					},
					{
						"name": "LastPaymentAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "CurrentYearInterestPaid",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "RegularPaymentAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "InterestRate",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "PriorYearInterestPaid",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "PayoffBalance",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "PayDownBalance",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "PrincipalBalance",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "AmountToPayCurrent",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalPerDiem",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalAmountCurrentlyDue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "AmountPastDue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "OriginalLoanAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "CurrentTerm",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RemainingTerm",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RemainingPayments",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PaymentCalculationPeriod",
						"type": "varchar"
					},
					{
						"name": "CreditLimitAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "AvailableCredit",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "OpenDate",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NextlyCrossAccounts_Staging"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_SQL_DataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_BusinessDataUAT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Username",
						"type": "varchar"
					},
					{
						"name": "MemberNumber",
						"type": "varchar"
					},
					{
						"name": "PersonNumber",
						"type": "varchar"
					},
					{
						"name": "EAgreementNumber",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "Adaptive",
					"table": "ActivityLog"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_ThresholdSinkDastaSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_BusinessDataUAT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SubscriptionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BalanceAmount",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "",
					"table": "ExternalAlert_ThresholdStaging"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_ThresholdSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ThresholdFilename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().ThresholdFilename",
							"type": "Expression"
						},
						"folderPath": "UAT/ThresholdAlerts",
						"container": "to-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "SubscriptionID|BalanceAmount",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_TransactionSinkDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_BusinessDataUAT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SubscriptionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmailContent",
						"type": "varchar"
					},
					{
						"name": "TextContent",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ExternalAlert_TransactionStaging"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_TransactionSourceDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TransactionFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "UAT/TransactionAlerts",
						"container": "to-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Uat_LoanDueAlertsSinkDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_BusinessDataUAT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SubscriptionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmailContent",
						"type": "varchar"
					},
					{
						"name": "TextContent",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "External_LoanDueAlertStaging"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Uat_LoanDueAlertsSourceDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TransactionFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "UAT/LoanDueAlerts",
						"container": "to-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UserCreditcardsExcel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "in",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Nextly User Credit Cards DNA_CCM 2024_10_11_122619.xlsx",
						"folderPath": "DEV/UserCreditCards",
						"container": "offline-services"
					}
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copybacsourc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ADFPOC",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": ""
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/emulation_Destination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/Static"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "BusinessData",
					"table": "EmulationActivityDynamicDescriptionValue"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Archive')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MasterTable_lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_SelectAppDRData]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dev_BrowserTabLogsSourceDataSet",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ArchiveEnabled_Filter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ArchiveEnabled_Filter').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "Switch1",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "ArchiveDays_Set variable",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "TableName_Set variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().TableName\r\n",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "ErrorLog",
												"activities": [
													{
														"name": "ErrorLog_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM ErrorLog WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBatchSize": 1000,
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false,
																"disableMetricsCollection": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "ErrorID",
																			"type": "Int32",
																			"physicalType": "int"
																		},
																		"sink": {
																			"name": "ErrorID",
																			"type": "Int32",
																			"physicalType": "int"
																		}
																	},
																	{
																		"source": {
																			"name": "TenantID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "SystemIP",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "SystemIP",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "SiteURL",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "SiteURL",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Type",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Type",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "InnerException",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "InnerException",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedBy",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "CreatedBy",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "Comments",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "Comments",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_ErrorLogSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveErrorLogDataset",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "ErrorLog_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "ErrorLog_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ErrorLogSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "TransactionLog_Json",
												"activities": [
													{
														"name": "TransactionLog_Json_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM TransactionLog_Json\n WHERE CAST(modifiedDate AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "TransId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "TransId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "SessionId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "SessionId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "ProcessId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "ProcessId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "reference",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "reference",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Json",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "Json",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "modifiedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "modifiedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_TransactionLog_JsonDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveTransactionLog_JsonDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "TransactionLog_Json_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "TransactionLog_Json_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_TransactionLog_JsonDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "ExternalRequestTxs",
												"activities": [
													{
														"name": "ExternalRequestTxs_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM ExternalRequestTxs\n WHERE CAST(RequestDateTime AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "WebServiceTxsID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		},
																		"sink": {
																			"name": "WebServiceTxsID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		}
																	},
																	{
																		"source": {
																			"name": "DataSourceID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		},
																		"sink": {
																			"name": "DataSourceID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		}
																	},
																	{
																		"source": {
																			"name": "DatasourceName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "DatasourceName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CommandName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "CommandName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ContactId",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "ContactId",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "UserID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "RequestDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "RequestDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "ResponseDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "ResponseDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "RequestParameters",
																			"type": "String",
																			"physicalType": "text"
																		},
																		"sink": {
																			"name": "RequestParameters",
																			"type": "String",
																			"physicalType": "text"
																		}
																	},
																	{
																		"source": {
																			"name": "ResponseData",
																			"type": "String",
																			"physicalType": "text"
																		},
																		"sink": {
																			"name": "ResponseData",
																			"type": "String",
																			"physicalType": "text"
																		}
																	},
																	{
																		"source": {
																			"name": "ErrorCode",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "ErrorCode",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ErrorData",
																			"type": "String",
																			"physicalType": "text"
																		},
																		"sink": {
																			"name": "ErrorData",
																			"type": "String",
																			"physicalType": "text"
																		}
																	},
																	{
																		"source": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "EnvCode",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "EnvCode",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "RequestType",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "RequestType",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CustomerId",
																			"type": "Int32",
																			"physicalType": "int"
																		},
																		"sink": {
																			"name": "CustomerId",
																			"type": "Int32",
																			"physicalType": "int"
																		}
																	},
																	{
																		"source": {
																			"name": "InnerException",
																			"type": "String",
																			"physicalType": "text"
																		},
																		"sink": {
																			"name": "InnerException",
																			"type": "String",
																			"physicalType": "text"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_ExternalRequestTxsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveExternalRequestTxsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "ExternalRequestTxs_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "ExternalRequestTxs_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ExternalRequestTxsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "TraceData",
												"activities": [
													{
														"name": "TraceData_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM TraceData\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "ID",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "ID",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "TenantID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserHostAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserHostAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserHostName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserHostName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IP",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "IP",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "URL",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "URL",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Browser",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Browser",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "HasCookies",
																			"type": "Boolean",
																			"physicalType": "bit"
																		},
																		"sink": {
																			"name": "HasCookies",
																			"type": "Boolean",
																			"physicalType": "bit"
																		}
																	},
																	{
																		"source": {
																			"name": "InputType",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "InputType",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IsMobileDevice",
																			"type": "Boolean",
																			"physicalType": "bit"
																		},
																		"sink": {
																			"name": "IsMobileDevice",
																			"type": "Boolean",
																			"physicalType": "bit"
																		}
																	},
																	{
																		"source": {
																			"name": "BowserVersion",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "BowserVersion",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "MobileDeviceManufacturer",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "MobileDeviceManufacturer",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "MobileDeviceModel",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "MobileDeviceModel",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "LogonUser",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "LogonUser",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserObjectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserObjectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_TraceDataSourceData",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveTraceData",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "TraceData_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "TraceData_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_TraceDataSourceData",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "TransactionLog_Sql",
												"activities": [
													{
														"name": "TransactionLog_Sql_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM TransactionLog_Sql\n WHERE CAST(ModifiedTime AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "TranID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "TranID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "RecId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "RecId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormTitle",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormTitle",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Status",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Status",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "SessionId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "SessionId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "ParentId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "ParentId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "ProcessId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "ProcessId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "startTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "startTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "EndTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "EndTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "ErrorId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "ErrorId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "TimeTaken",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TimeTaken",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ModifiedTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "ModifiedTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_TransactionLog_SqlSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveTransactionLog_SqlDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "TransactionLog_Sql_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "TransactionLog_Sql_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_TransactionLog_SqlSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "FormAPITxs",
												"activities": [
													{
														"name": "FormAPITxs_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM FormAPITxs\n WHERE CAST(RequestDateTime AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "APITxsID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		},
																		"sink": {
																			"name": "APITxsID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		}
																	},
																	{
																		"source": {
																			"name": "FormID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CommandName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "CommandName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "RequestDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "RequestDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "ResponseDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "ResponseDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "RequestParameters",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "RequestParameters",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ResponseData",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "ResponseData",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ErrorCode",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "ErrorCode",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ErrorStatus",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "ErrorStatus",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ErrorData",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "ErrorData",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserHostAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserHostAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserHostName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserHostName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IP",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "IP",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "DEV_FormAPITxsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveFormAPITxsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "FormAPITxs_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "FormAPITxs_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "DEV_FormAPITxsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "BrowserTabLogs",
												"activities": [
													{
														"name": "BrowserTabLogs_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM BrowserTabLogs\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "BrowserTabId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "BrowserTabId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "LevelId",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "LevelId",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "TypeId",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "TypeId",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "RequestId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "RequestId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ParentId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "ParentId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Method",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Method",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "URL",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "URL",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "StatusCode",
																			"type": "Int32",
																			"physicalType": "int"
																		},
																		"sink": {
																			"name": "StatusCode",
																			"type": "Int32",
																			"physicalType": "int"
																		}
																	},
																	{
																		"source": {
																			"name": "Headers",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Headers",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Description",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Description",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormInfo",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormInfo",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_BrowserTabLogsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveBrowserTabLogsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "BrowserTabLogs_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "BrowserTabLogs_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_BrowserTabLogsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "BrowserTabInfo",
												"activities": [
													{
														"name": "BrowserTabInfo_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM BrowserTabInfo\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "SessionID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "SessionID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "BrowserTabId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "BrowserTabId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserAgent",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserAgent",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IpAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "IpAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_BrowserTabInfoSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveBrowserTabInfoDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "BrowserTabInfo_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "BrowserTabInfo_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_BrowserTabInfoSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "AF_Log4NetDB",
												"activities": [
													{
														"name": "AF_Log4NetDB_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM AF_Log4NetDB\n WHERE CAST(Date AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int32",
																			"physicalType": "int"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int32",
																			"physicalType": "int"
																		}
																	},
																	{
																		"source": {
																			"name": "Date",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "Date",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "Thread",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Thread",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Level",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Level",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Logger",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Logger",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Exception",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Exception",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_AF_Log4NetDBSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveAF_Log4NetDBDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "AF_Log4NetDB_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "AF_Log4NetDB_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_AF_Log4NetDBSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "NF_UserConnections",
												"activities": [
													{
														"name": "NF_UserConnections_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM NF_UserConnections\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "UserId",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "UserId",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ClientId",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "ClientId",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IP_Address",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "IP_Address",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_NF_UserConnectionsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveNF_UserConnectionsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "NF_UserConnections_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "NF_UserConnections_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_NF_UserConnectionsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "SecurityLog",
												"activities": [
													{
														"name": "SecurityLog_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM SecurityLog\n WHERE CAST(UpdateTime AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "TableName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TableName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Operation",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Operation",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Desc_before",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Desc_before",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Desc_after",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Desc_after",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UpdateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "UpdateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_SecurityLogSourceDateSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveSecurityLogDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "SecurityLog_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "SecurityLog_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_SecurityLogSourceDateSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "RefreshTokens",
												"activities": [
													{
														"name": "RefreshTokens_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM RefreshTokens\n WHERE CAST(ExpiresUtc AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "RefreshToken",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "RefreshToken",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Subject",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Subject",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IssuedUtc",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "IssuedUtc",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "ExpiresUtc",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "ExpiresUtc",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_RefreshTokensSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveRefreshTokensDataSe",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "RefreshTokens_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "RefreshTokens_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_RefreshTokensSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "UserInvalidAttempts",
												"activities": [
													{
														"name": "UserInvalidAttempts_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM UserInvalidAttempts\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "objectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "objectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "ModifiedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "ModifiedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "InvalidPasswordAttempts",
																			"type": "Int32",
																			"physicalType": "int"
																		},
																		"sink": {
																			"name": "InvalidPasswordAttempts",
																			"type": "Int32",
																			"physicalType": "int"
																		}
																	},
																	{
																		"source": {
																			"name": "IsDeleted",
																			"type": "Boolean",
																			"physicalType": "bit"
																		},
																		"sink": {
																			"name": "IsDeleted",
																			"type": "Boolean",
																			"physicalType": "bit"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_UserInvalidAttemptsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveUserInvalidAttemptsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "UserInvalidAttempts_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "UserInvalidAttempts_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_UserInvalidAttemptsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "PasswordHistory",
												"activities": [
													{
														"name": "PasswordHistory_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM PasswordHistory\n WHERE CAST(date AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "id",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		},
																		"sink": {
																			"name": "id",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		}
																	},
																	{
																		"source": {
																			"name": "userObjectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "userObjectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "password",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "password",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "date",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "date",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_PasswordHistorySourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchivePasswordHistoryDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "PasswordHistory_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "PasswordHistory_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_PasswordHistorySourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "TempUserLoginValidations",
												"activities": [
													{
														"name": "TempUserLoginValidations_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM TempUserLoginValidations\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "Key",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Key",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "ModifiedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "ModifiedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "IsDeleted",
																			"type": "Boolean",
																			"physicalType": "bit"
																		},
																		"sink": {
																			"name": "IsDeleted",
																			"type": "Boolean",
																			"physicalType": "bit"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_TempUserLoginValidationsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveTempUserLoginValidationsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "TempUserLoginValidations_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "TempUserLoginValidations_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_TempUserLoginValidationsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "RulesLog",
												"activities": [
													{
														"name": "RulesLog_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM RulesLog\n WHERE CAST(LogTime AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "LogTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "LogTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "LogJSON",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "LogJSON",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "LoginName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "LoginName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_RulesLogSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveRulesLogDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "RulesLog_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "RulesLog_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_RulesLogSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "UserLoginAttempts",
												"activities": [
													{
														"name": "UserLoginAttempts_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM UserLoginAttempts\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "ObjectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "ObjectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "Browser",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Browser",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "BrowserVersion",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "BrowserVersion",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserAgent",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserAgent",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Details",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Details",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IP",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "IP",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IsMobileDevice",
																			"type": "Boolean",
																			"physicalType": "bit"
																		},
																		"sink": {
																			"name": "IsMobileDevice",
																			"type": "Boolean",
																			"physicalType": "bit"
																		}
																	},
																	{
																		"source": {
																			"name": "MobileDeviceManufacture",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "MobileDeviceManufacture",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "MobileDeviceModel",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "MobileDeviceModel",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserHostAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserHostAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserHostName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserHostName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IsValidAttempt",
																			"type": "Boolean",
																			"physicalType": "bit"
																		},
																		"sink": {
																			"name": "IsValidAttempt",
																			"type": "Boolean",
																			"physicalType": "bit"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_UserLoginAttemptsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveUserLoginAttemptsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "UserLoginAttempts_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "UserLoginAttempts_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_UserLoginAttemptsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "UserMappingConfiguration",
												"activities": [
													{
														"name": "UserMappingConfiguration_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM UserMappingConfiguration\n WHERE CAST(LastAccessed AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "ID",
																			"type": "Int32",
																			"physicalType": "int"
																		},
																		"sink": {
																			"name": "ID",
																			"type": "Int32",
																			"physicalType": "int"
																		}
																	},
																	{
																		"source": {
																			"name": "UserID",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "UserID",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "LastAccessed",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "LastAccessed",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_UserMappingConfigurationSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveUserMappingConfigurationDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "UserMappingConfiguration_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "UserMappingConfiguration_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_UserMappingConfigurationSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "ArchiveDays_Set variable",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "ArchiveDays",
										"value": {
											"value": "@item().ArchiveDays\r\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "TableName_Set variable",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TableName",
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "ArchiveEnabled_Filter",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "MasterTable_lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('MasterTable_lookup').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().IsArchiveEnabled,true)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "PurgeEnabled_Filter",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('MasterTable_lookup').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().IsPurgeEnabled,true)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachForPurge",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "PurgeEnabled_Filter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('PurgeEnabled_Filter').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "PurgeDays_SetVariable",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PurgeDays",
										"value": {
											"value": "@item().PurgeDays",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SwitchForPurge",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "PurgeDays_SetVariable",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "TableNamePurge_Set variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "ErrorLog",
												"activities": [
													{
														"name": "Purge_ErrorLog_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveErrorLogDataset",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "TransactionLog_Json",
												"activities": [
													{
														"name": "Purge_TransactionLog_Json_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveTransactionLog_JsonDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "ExternalRequestTxs",
												"activities": [
													{
														"name": "Purge_ExternalRequestTxs_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveExternalRequestTxsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "TraceData",
												"activities": [
													{
														"name": "Purge_TraceData_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveTraceData",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "TransactionLog_Sql",
												"activities": [
													{
														"name": "Purge_TransactionLog_Sql_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveTransactionLog_SqlDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "FormAPITxs",
												"activities": [
													{
														"name": "Purge_FormAPITxs_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveFormAPITxsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "BrowserTabLogs",
												"activities": [
													{
														"name": "Purge_BrowserTabLogs_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveBrowserTabLogsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "BrowserTabInfo",
												"activities": [
													{
														"name": "Purge_BrowserTabInfo_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveBrowserTabInfoDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "AF_Log4NetDB",
												"activities": [
													{
														"name": "Purge_AF_Log4NetDB_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveAF_Log4NetDBDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "NF_UserConnections",
												"activities": [
													{
														"name": "Purge_NF_UserConnections_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveNF_UserConnectionsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "SecurityLog",
												"activities": [
													{
														"name": "Purge_SecurityLog_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveSecurityLogDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "RefreshTokens",
												"activities": [
													{
														"name": "Purge_RefreshTokens_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveRefreshTokensDataSe",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "UserInvalidAttempts",
												"activities": [
													{
														"name": "Purge_UserInvalidAttempts_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveUserInvalidAttemptsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "PasswordHistory",
												"activities": [
													{
														"name": "Purge_PasswordHistory_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchivePasswordHistoryDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "TempUserLoginValidations",
												"activities": [
													{
														"name": "Purge_TempUserLoginValidations_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveTempUserLoginValidationsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "RulesLog",
												"activities": [
													{
														"name": "Purge_RulesLog_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveRulesLogDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "UserLoginAttempts",
												"activities": [
													{
														"name": "Purge_UserLoginAttempts_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveUserLoginAttemptsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "UserMappingConfiguration",
												"activities": [
													{
														"name": "Purge_UserMappingConfiguration_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveUserMappingConfigurationDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "TableNamePurge_Set variable",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TableName",
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"IsArchiveEnabled": {
						"type": "String"
					},
					"ArchiveDays": {
						"type": "Integer"
					},
					"IsPurgeEnabled": {
						"type": "String"
					},
					"PurgeDays": {
						"type": "Integer"
					},
					"TableName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CCM_CreditCard_AccountDetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CCM_CreditCard_AccountDetails_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CCM_CreditCard_AccountDetails_StagingTruncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/CCM_CreditCard_AccountDetails",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DNA_Member_Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DNA_Member_Number",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CCM_Account_Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CCM_Account_Number",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Open_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Open_Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Current_Account_Balance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Current_Account_Balance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Next_Payment_Due_Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Next_Payment_Due_Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Next_Payment_Amt_Due",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Next_Payment_Amt_Due",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Current_Year_Interest_Paid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Current_Year_Interest_Paid",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Prior_Year_Interest_Paid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Prior_Year_Interest_Paid",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Interest_Rate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Interest_Rate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "APR_Interest_Class",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "APR_Interest_Class",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Account_Payoff_Balance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Account_Payoff_Balance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Account_Principal_Balance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Account_Principal_Balance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Amount_To_Pay_Current",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Amount_To_Pay_Current",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Amount_Currently_Due",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Amount_Currently_Due",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Account_Credit_Limit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Account_Credit_Limit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Per_Diem",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Total_Per_Diem",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Current_Term",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Current_Term",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Remaining_Payments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Remaining_Payments",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Payment_Calculation_Period",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Payment_Calculation_Period",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Available_Credit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Available_Credit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Amount_Past_Due",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Amount_Past_Due",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dev_OfflinSource_CCM_CreditCard_AccountDetails",
								"type": "DatasetReference",
								"parameters": {
									"CCM_CreditCard_AccountDetails": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_OfflineDestination_CCM_CreditCard_AccountDetails",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CCM_CreditCard_AccountDetails_StagingTruncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE CCM_CreditCard_AccountDetails_Staging"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CCM_CreditCard_AccountDetails_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Spi_InsertToCreditCardAccountBalanceInfo]"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/CCM_CreditCard_AccountDetails",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DEV_Completed_CCM_CreditCard_AccountDetails_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_Completed_CCM_CreditCard_AccountDetails_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "Nextly CCM Credit Card Account Details2024_11_18_204825.csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/DEV/CCM_CreditCard_AccountDetails"
					}
				},
				"folder": {
					"name": "OfflineServices/Dev_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CK_SAV_Accountdetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CK_SAV_Accountdetails_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CK_SAV_Accountdetails_StagingTruncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/CK_SAV_Accountdetails",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OPEN_DATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OPEN_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CURRENT_BALANCE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CURRENT_BALANCE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "ACCOUNT_INT_RATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ACCOUNT_INT_RATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "YTD_INTEREST_AMT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "YTD_INTEREST_AMT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DATE_LAST_CONTACT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DATE_LAST_CONTACT",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dev_OfflinSource_CK_SAV_Accountdetails",
								"type": "DatasetReference",
								"parameters": {
									"CK_SAV_Accountdetails": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_OfflineDestination_CK_SAV_Accountdetails",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CK_SAV_Accountdetails_StagingTruncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[CK_SAV_Accountdetails_Staging]"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CK_SAV_Accountdetails_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Spi_InsertIntoCKANDSAVAccountsBalanceInfo]"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/CK_SAV_Accountdetails",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DEV_Completed_CK_SAV_Accountdetails_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_Completed_CK_SAV_Accountdetails_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "Nextly CK SAV Account Details 2024_11_16_110220.csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/DEV/CK_SAV_Accountdetails"
					}
				},
				"folder": {
					"name": "OfflineServices/Dev_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CK_SAV_Accounttransactions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CK_SAV_Accounttransactions_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CK_SAV_Accounttransactions_StagingTruncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/CK_SAV_Accounttransactions",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_POSTING_DATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_POSTING_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "RTXN_ACTIVITY_DATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_ACTIVITY_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DEBIT_CREDIT_FLAG",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DEBIT_CREDIT_FLAG",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_STATUS_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_STATUS_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_STATUS_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_STATUS_DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_TYPE_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_TYPE_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_AMOUNT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_AMOUNT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "EXTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EXTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EXTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EXTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dev_OfflinSource_CK_SAV_Accounttransactions",
								"type": "DatasetReference",
								"parameters": {
									"CK_SAV_Accounttransactionsons_Staging": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_OfflineDestination_CK_SAV_Accounttransactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CK_SAV_Accounttransactions_StagingTruncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[CK_SAV_Accounttransactions_Staging]"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CK_SAV_Accounttransactions_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Spi_InsertToAccountTransactionsDetails]"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "completed copy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/CK_SAV_Accounttransactions",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DEV_Completed_CK_SAV_Accounttransactions_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_Completed_CK_SAV_Accounttransactions_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "Nextly CK SAV TD Transactions Prior 15 Days 2024_12_18_145417 (1).csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/DEV/CK_SAV_Accounttransactions"
					}
				},
				"folder": {
					"name": "OfflineServices/Dev_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DebitCardDetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DebitCardDetails_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DebitCardDetails_StagingTruncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/DebitCardDetails",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ExternalCardNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ExternalCardNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FullName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FullName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IssueDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IssueDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "ExpireDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ExpireDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "AgreementTypeCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AgreementTypeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentStatusCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentStatusCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrimarySavingsAccountNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PrimarySavingsAccountNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrimaryCheckingAccountNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PrimaryCheckingAccountNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AgreementNumber1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AgreementNumber1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleEntityNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RoleEntityNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerPersonNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OwnerPersonNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerOrganizationNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OwnerOrganizationNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dev_OfflinSource_DebitCardDetails",
								"type": "DatasetReference",
								"parameters": {
									"DebitCardDetails": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_OfflineDestination_DebitCardDetails",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DebitCardDetails_StagingTruncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[DebitCardDetails_Staging]"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DebitCardDetails_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Spi_InsertInToMemberDebitCardDetails]"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "completed copy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/DebitCardDetails",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DEV_Completed_DebitCardDetails_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_Completed_DebitCardDetails_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "NextlyDebitCards 2024_12_16_195605 (1).csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/DEV/DebitCardDetails"
					}
				},
				"folder": {
					"name": "OfflineServices/Dev_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoanDetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LoanDetails_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LoanDetails_StagingTruncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/LoanDetails",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BalanceCategoryCodeEscrow",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BalanceCategoryCodeEscrow",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentBalanceEscrow",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentBalanceEscrow",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "BalanceCategoryCodeUnapplied",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BalanceCategoryCodeUnapplied",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentBalanceUnapplied",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentBalanceUnapplied",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "BalanceCategoryCodeLoanInProcess",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BalanceCategoryCodeLoanInProcess",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentBalanceLoanInProcess",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentBalanceLoanInProcess",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "NextPaymentDueDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NextPaymentDueDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CurrentDueDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentDueDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "LastPaymentDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastPaymentDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "LastPaymentAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastPaymentAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "CurrentYearInterestPaid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentYearInterestPaid",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "RegularPaymentAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegularPaymentAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "InterestRate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "InterestRate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "PriorYearInterestPaid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PriorYearInterestPaid",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "PayoffBalance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PayoffBalance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "PayDownBalance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PayDownBalance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "PrincipalBalance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PrincipalBalance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "AmountToPayCurrent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AmountToPayCurrent",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "TotalPerDiem",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalPerDiem",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "TotalAmountCurrentlyDue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalAmountCurrentlyDue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "AmountPastDue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AmountPastDue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "OriginalLoanAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OriginalLoanAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "CurrentTerm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentTerm",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RemainingTerm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RemainingTerm",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RemainingPayments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RemainingPayments",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PaymentCalculationPeriod",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PaymentCalculationPeriod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreditLimitAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CreditLimitAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "AvailableCredit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AvailableCredit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "OpenDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OpenDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dev_OfflinSource_LoanDetails",
								"type": "DatasetReference",
								"parameters": {
									"LoanDetailsFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_OfflineDestination_LoanDetails",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LoanDetails_StagingTruncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[LoanDetails_Staging]"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "LoanDetails_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Spi_InsertToLoanTransactionsDetails]"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "completed copy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/LoanDetails",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DEV_Completed_LoanDetails_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_Completed_LoanDetails_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "NextlyLoanAccountDetails 2024_11_18_203334.csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/DEV/LoanDetails"
					}
				},
				"folder": {
					"name": "OfflineServices/Dev_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MemberDataDetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MemberDataDetails_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "MemberDataDetails_StagingTruncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/MemberDataDetails",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MemberNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MemberNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerPersonNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OwnerPersonNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerOrganizationNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OwnerOrganizationNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AgreementNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AgreementNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AgreementType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AgreementType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OrgName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OrgName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OrgTypeDescription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OrgTypeDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AddressUseCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AddressUseCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AddressLineText",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AddressLineText",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CityName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CityName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ZipCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ZipCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StateCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StateCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CountryName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CountryName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmailTypeCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmailTypeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmailTypeDescription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmailTypeDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomePhone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HomePhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomePhoneUseCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HomePhoneUseCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CellPhone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CellPhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CellPhoneUseCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CellPhoneUseCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BusinessPhone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BusinessPhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BusinessPhoneUseCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BusinessPhoneUseCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OrgTaxIds",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OrgTaxIds",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PersonTaxId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PersonTaxId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareAccountNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ShareAccountNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DateOfBirth",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DateOfBirth",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "MemberDateLastContact",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MemeberDateLastContact",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dev_OfflinSource_MemberDataDetails",
								"type": "DatasetReference",
								"parameters": {
									"MemberDataDetails": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_OfflineDestination_MemberDataDetails",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "MemberDataDetails_StagingTruncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[MemberDataDetails_Staging]"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "MemberDataDetails_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "Spi_InsertIntoMembersOffline"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "completed copy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/MemberDataDetails",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DEV_Completed_MemberDataDetails_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_Completed_MemberDataDetails_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "NextlyMemberData 2024_12_18_115749.csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/DEV/MemberDataDetails"
					}
				},
				"folder": {
					"name": "OfflineServices/Dev_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NextlyAccountDetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NextlyAccountDetails_Staging_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "NextlyAccountDetails_Staging Truncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/NextlyAccountDetails",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "OpenDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OpenDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountDateLastContact",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountDateLastContact",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentAccountStatusCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentAccountStatusCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentAccountStatusDesc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentAccountStatusDesc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountOwnershipCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountOwnershipCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountOwnershipDesc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountOwnershipDesc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MajorAccountTypeCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MajorAccountTypeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MinorAccountTypeCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MinorAccountTypeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MinorAccountTypeDescription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MinorAccountTypeDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProductFullName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProductFullName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountNickName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountNickName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentBalance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentBalance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BalanceCategoryCodeEscrow",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BalanceCategoryCodeEscrow",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentBalanceEscrow",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentBalanceEscrow",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BalanceCategoryCodeUnapplied",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BalanceCategoryCodeUnapplied",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentBalanceUnapplied",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentBalanceUnapplied",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BalanceCategoryCodeLIP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BalanceCategoryCodeLIP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentLIPBalance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentLIPBalance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NextPaymentDueDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NextPaymentDueDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentDueDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentDueDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastPaymentDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastPaymentDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastPaymentAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastPaymentAmount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanYTDInterestPaid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LoanYTDInterestPaid",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RegularPaymentAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegularPaymentAmount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanInterestRate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LoanInterestRate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanPriorYTDInterestPaid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LoanPriorYTDInterestPaid",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PayoffBalance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PayoffBalance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PayDownBalance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PayDownBalance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrincipalBalance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PrincipalBalance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AmountToPayCurrent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AmountToPayCurrent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TotalPerDiem",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalPerDiem",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TotalAmountCurrentlyDue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalAmountCurrentlyDue",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AmountPastDue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AmountPastDue",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OriginalLoanAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OriginalLoanAmount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanCurrentTerm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LoanCurrentTerm",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanRemainingTerm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LoanRemainingTerm",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RemainingPayments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RemainingPayments",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PaymentCalculationPeriod",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PaymentCalculationPeriod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreditLimitAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CreditLimitAmount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AvailableCredit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AvailableCredit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DepositInterestRate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DepositInterestRate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DepositPriorYTDInterestPaid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DepositPriorYTDInterestPaid",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DepositYTDInterestPaid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DepositYTDInterestPaid",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DepositLastInterestAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DepositLastInterestAmount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DepositLastInterestPostDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DepositLastInterestPostDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DepositCurrentTerm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DepositCurrentTerm",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaturityDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MaturityDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerPersonNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OwnerPersonNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerOrganizationNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OwnerOrganizationNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MemberNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MemberNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AgreementNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AgreementNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dev_OfflinSource_NextlyAccountDetails",
								"type": "DatasetReference",
								"parameters": {
									"NextlyAccountDetails": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_OfflineDestination_NextlyAccountDetails",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "NextlyAccountDetails_Staging Truncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE StagingTable_AccountDetails"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "NextlyAccountDetails_Staging_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Spi_InsertIntoAccountDetails]"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/NextlyAccountDetails",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DEV_Completed_NextlyAccountDetails_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_Completed_NextlyAccountDetails_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "NextlyAccounts 2024_12_16_143702.csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/DEV/NextlyAccountDetails"
					}
				},
				"folder": {
					"name": "OfflineServices/Dev_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NextlyAccountRoles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NextlyAccountRoles_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "NextlyAccountRoles_StagingTruncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/NextlyAccountRoles",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleEntityNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RoleEntityNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleEntityTypeCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RoleEntityTypeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RoleCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleDescription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RoleDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MemberName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MemberName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dev_OfflinSource_NextlyAccountRoles",
								"type": "DatasetReference",
								"parameters": {
									"NextlyAccountRoles": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_OfflineDestination_NextlyAccountRoles",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "NextlyAccountRoles_StagingTruncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE NextlyAccountRoles_Staging"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "NextlyAccountRoles_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "Spi_InsertToMemberRolesDetails"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/NextlyAccountRoles",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DEV_Completed_NextlyAccountRoles_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_Completed_NextlyAccountRoles_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "NextlyAccountRoles 2024_12_16_142751.csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/DEV/NextlyAccountRoles"
					}
				},
				"folder": {
					"name": "OfflineServices/Dev_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}