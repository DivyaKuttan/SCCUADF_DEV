{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "SCCU-EU-Data-Factory-NonProd"
		},
		"DEV_ThresholdAlert_properties_Nextly_ThresholdAlert_DEV_parameters_FileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"DEV_ThresholdAlert_properties_Nextly_ThresholdAlert_DEV_parameters_FilePath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"DEV_ThresholdAlert_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a8cd236d-26bd-46eb-81fc-dea8aac0fe3c/resourceGroups/SCCU-EU-PROD-SRV-RG/providers/Microsoft.Storage/storageAccounts/sccudatafactorystorage"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/UAT_DepositTransaction_Archival')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AccountTransactions_Copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM [dbo].[AccountTransactionsDetails] \n\tWHERE \n\t\t[PostingDate] <DATEADD(DAY,-15,CAST(GETUTCDATE() AS DATE));",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "ID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ObjectGUID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ObjectGUID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountNumber",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "RTXNNumber",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "RTXNNumber",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "PostingDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "PostingDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "ActivityDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ActivityDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "DebitCreditFlag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DebitCreditFlag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Statuscode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Statuscode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StatusDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "StatusDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXNTypecode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RTXNTypecode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXNTypeDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RTXNTypeDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "Amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "ExternalRTXNDescText",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ExternalRTXNDescText",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "InternalRTXNDescText",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "InternalRTXNDescText",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "UAT_Source_Offline_AccountTransactions_Archive",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_Destination_Offline_AccountTransactions_Archive",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "AccountTransactionsDelete_Script",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "AccountTransactions_Copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCUUAT_OfflineModeDB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "DECLARE @BatchSize INT = 10000; \nDECLARE @RowsAffected INT = 1; \nDECLARE @TotalDeletedRows INT = 0; \n\nWHILE (@RowsAffected > 0)\nBEGIN\n    DELETE TOP (@BatchSize)\n    FROM \n        [dbo].[AccountTransactionsDetails]\n    WHERE \n        [PostingDate]  < DATEADD(DAY, -15, CAST(GETUTCDATE() AS DATE));\n\n    SET @RowsAffected = @@ROWCOUNT; \n    SET @TotalDeletedRows = @TotalDeletedRows + @RowsAffected;\nEND\n\n\nSELECT @TotalDeletedRows AS TotalDeletedRows;\n",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Purge_Script",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "AccountTransactionsDelete_Script",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCUUAT_ArchiveDB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "DECLARE @BatchSize INT = 10000; \nDECLARE @RowsAffected INT = 1; \nDECLARE @TotalDeletedRows INT = 0; \n\nWHILE (@RowsAffected > 0)\nBEGIN\n    DELETE TOP (@BatchSize)\n   FROM \n\t\t[Offline].[AccountTransactionsDetails] \n\tWHERE \n\t\t[PostingDate] < DATEADD(DAY,-47,CAST(GETUTCDATE() AS DATE));\n\n    SET @RowsAffected = @@ROWCOUNT; \n    SET @TotalDeletedRows = @TotalDeletedRows + @RowsAffected;\nEND\n\n\nSELECT @TotalDeletedRows AS TotalDeletedRows;\n",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "OfflineServices/UAT_OfflineServices/UAT_Offline_Archival"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_LoanTransaction_Archival')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LoanTransactions",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \tFROM [dbo].[LoanTransactionsDetails] \n\tWHERE \n\t\t[PostingDate]  <DATEADD(DAY,-15,CAST(GETUTCDATE() AS DATE));",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "ID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ObjectGUID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ObjectGUID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountNumber",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "RTXNNumber",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "RTXNNumber",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "PostingDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "PostingDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "ActivityDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ActivityDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "DebitCreditFlag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DebitCreditFlag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Statuscode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Statuscode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StatusDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "StatusDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXNTypecode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RTXNTypecode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXNTypeDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RTXNTypeDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "Amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "ExternalRTXNDescText",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ExternalRTXNDescText",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "InternalRTXNDescText",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "InternalRTXNDescText",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "UAT_Source_Offline_LoanTransactions_Archive",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_Destination_Offline_LoanTransactions_Archive",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "AccountTransactionsDelete_Script",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "LoanTransactions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCUUAT_OfflineModeDB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "DECLARE @BatchSize INT = 10000; \nDECLARE @RowsAffected INT = 1; \nDECLARE @TotalDeletedRows INT = 0; \n\nWHILE (@RowsAffected > 0)\nBEGIN\n    DELETE \n\tFROM \n\t\t[dbo].[LoanTransactionsDetails]\n\tWHERE \n\t\t[PostingDate]  < DATEADD(DAY,-15,CAST(GETUTCDATE() AS DATE));\n\n    SET @RowsAffected = @@ROWCOUNT; \n    SET @TotalDeletedRows = @TotalDeletedRows + @RowsAffected;\nEND\n\n\nSELECT @TotalDeletedRows AS TotalDeletedRows;\n",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Purge_Script",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "AccountTransactionsDelete_Script",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCUUAT_ArchiveDB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "DECLARE @BatchSize INT = 10000; \nDECLARE @RowsAffected INT = 1; \nDECLARE @TotalDeletedRows INT = 0; \n\nWHILE (@RowsAffected > 0)\nBEGIN\n    DELETE \n\tFROM \n\t\t[Offline].[LoanTransactionsDetails]\n\tWHERE \n\t\t[PostingDate] < DATEADD(DAY,-47,CAST(GETUTCDATE() AS DATE));\n\n    SET @RowsAffected = @@ROWCOUNT; \n    SET @TotalDeletedRows = @TotalDeletedRows + @RowsAffected;\nEND\n\nSELECT @TotalDeletedRows AS TotalDeletedRows;\n",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "OfflineServices/UAT_OfflineServices/UAT_Offline_Archival"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_MemberDataDetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MemberDataDetails_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "MemberDataDetails_StagingTruncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/MemberDataDetails",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MemberNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MemberNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerPersonNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OwnerPersonNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerOrganizationNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OwnerOrganizationNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AgreementNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AgreementNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AgreementType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AgreementType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OrgName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OrgName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OrgTypeDescription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OrgTypeDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AddressUseCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AddressUseCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AddressLineText",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AddressLineText",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CityName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CityName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ZipCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ZipCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StateCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StateCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CountryName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CountryName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmailTypeCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmailTypeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmailTypeDescription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmailTypeDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomePhone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HomePhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomePhoneUseCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HomePhoneUseCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CellPhone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CellPhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CellPhoneUseCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CellPhoneUseCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BusinessPhone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BusinessPhone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BusinessPhoneUseCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BusinessPhoneUseCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OrgTaxIds",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OrgTaxIds",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PersonTaxId",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PersonTaxId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShareAccountNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ShareAccountNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DateOfBirth",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DateOfBirth",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "MemberDateLastContact",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MemeberDateLastContact",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "UAT_OfflinSource_MemberDataDetails",
								"type": "DatasetReference",
								"parameters": {
									"MemberDataDetails": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_OfflineDestination_MemberDataDetails",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "MemberDataDetails_StagingTruncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCUUAT_OfflineModeDB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[MemberDataDetails_Staging]"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "MemberDataDetails_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Spi_InsertIntoMembersOffline]"
						},
						"linkedServiceName": {
							"referenceName": "SCCUUAT_OfflineModeDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/MemberDataDetails",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "UAT_Completed_MemberDataDetails_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_Completed_MemberDataDetails_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SPU_UpdateContactDetails]"
						},
						"linkedServiceName": {
							"referenceName": "SCCUUAT_OfflineModeDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "NextlyMemberData*.csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/UAT/MemberDataDetails"
					}
				},
				"folder": {
					"name": "OfflineServices/UAT_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_NextlyAccountDetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NextlyAccountDetails_Staging_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "NextlyAccountDetails_Staging Truncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/NextlyAccountDetails",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "OpenDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OpenDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountDateLastContact",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountDateLastContact",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentAccountStatusCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentAccountStatusCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentAccountStatusDesc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentAccountStatusDesc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountOwnershipCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountOwnershipCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountOwnershipDesc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountOwnershipDesc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MajorAccountTypeCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MajorAccountTypeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MinorAccountTypeCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MinorAccountTypeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MinorAccountTypeDescription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MinorAccountTypeDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProductFullName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProductFullName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountNickName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountNickName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentBalance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentBalance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BalanceCategoryCodeEscrow",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BalanceCategoryCodeEscrow",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentBalanceEscrow",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentBalanceEscrow",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BalanceCategoryCodeUnapplied",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BalanceCategoryCodeUnapplied",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentBalanceUnapplied",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentBalanceUnapplied",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BalanceCategoryCodeLIP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BalanceCategoryCodeLIP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentLIPBalance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentLIPBalance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NextPaymentDueDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NextPaymentDueDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentDueDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentDueDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastPaymentDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastPaymentDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastPaymentAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastPaymentAmount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanYTDInterestPaid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LoanYTDInterestPaid",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RegularPaymentAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegularPaymentAmount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanInterestRate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LoanInterestRate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanPriorYTDInterestPaid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LoanPriorYTDInterestPaid",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PayoffBalance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PayoffBalance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PayDownBalance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PayDownBalance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrincipalBalance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PrincipalBalance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AmountToPayCurrent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AmountToPayCurrent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TotalPerDiem",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalPerDiem",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TotalAmountCurrentlyDue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalAmountCurrentlyDue",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AmountPastDue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AmountPastDue",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OriginalLoanAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OriginalLoanAmount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanCurrentTerm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LoanCurrentTerm",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanRemainingTerm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LoanRemainingTerm",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RemainingPayments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RemainingPayments",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PaymentCalculationPeriod",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PaymentCalculationPeriod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreditLimitAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CreditLimitAmount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AvailableCredit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AvailableCredit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DepositInterestRate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DepositInterestRate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DepositPriorYTDInterestPaid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DepositPriorYTDInterestPaid",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DepositYTDInterestPaid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DepositYTDInterestPaid",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DepositLastInterestAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DepositLastInterestAmount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DepositLastInterestPostDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DepositLastInterestPostDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DepositCurrentTerm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DepositCurrentTerm",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaturityDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MaturityDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerPersonNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OwnerPersonNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OwnerOrganizationNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OwnerOrganizationNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MemberNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MemberNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AgreementNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AgreementNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "UAT_OfflinSource_NextlyAccountDetails",
								"type": "DatasetReference",
								"parameters": {
									"NextlyAccountDetails": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_OfflineDestination_NextlyAccountDetails",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "NextlyAccountDetails_Staging Truncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCUUAT_OfflineModeDB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE StagingTable_AccountDetails"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "NextlyAccountDetails_Staging_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Spi_InsertIntoAccountDetails]"
						},
						"linkedServiceName": {
							"referenceName": "SCCUUAT_OfflineModeDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/NextlyAccountDetails",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "UAT_Completed_NextlyAccountDetails_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_Completed_NextlyAccountDetails_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "NextlyAccounts*.csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/UAT/NextlyAccountDetails"
					}
				},
				"folder": {
					"name": "OfflineServices/UAT_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_NextlyAccountRoles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NextlyAccountRoles_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "NextlyAccountRoles_StagingTruncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/NextlyAccountRoles",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleEntityNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RoleEntityNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleEntityTypeCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RoleEntityTypeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RoleCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleDescription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RoleDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MemberName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MemberName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "UAT_OfflinSource_NextlyAccountRoles",
								"type": "DatasetReference",
								"parameters": {
									"NextlyAccountRoles": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_OfflineDestination_NextlyAccountRoles",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "NextlyAccountRoles_StagingTruncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCUUAT_OfflineModeDB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE NextlyAccountRoles_Staging"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "NextlyAccountRoles_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "Spi_InsertToMemberRolesDetails"
						},
						"linkedServiceName": {
							"referenceName": "SCCUUAT_OfflineModeDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/NextlyAccountRoles",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "UAT_Completed_NextlyAccountRoles_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_Completed_NextlyAccountRoles_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "NextlyAccountRoles*.csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/UAT/NextlyAccountRoles"
					}
				},
				"folder": {
					"name": "OfflineServices/UAT_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_NextlyAccountlockout')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NextlyAccountlockout_Staging_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "NextlyAccountlockout_StagingTruncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/NextlyAccountlockout",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "LockoutFlagCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LockoutFlagCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LockoutFlagDescription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LockoutFlagDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "InactiveDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "InactiveDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "UAT_OfflinSource_NextlyAccountlockout",
								"type": "DatasetReference",
								"parameters": {
									"NextlyAccountlockout": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_OfflineDestination_NextlyAccountlockout",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "NextlyAccountlockout_StagingTruncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCUUAT_OfflineModeDB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE NextlyAccountlockout_Staging"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "NextlyAccountlockout_Staging_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "Spi_InsertToMemberLockOutFlagDetails"
						},
						"linkedServiceName": {
							"referenceName": "SCCUUAT_OfflineModeDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/NextlyAccountlockout",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "UAT_Completed_NextlyAccountlockout_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_Completed_NextlyAccountlockout_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "NextlyAccountLockout*.csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/UAT/NextlyAccountlockout"
					}
				},
				"folder": {
					"name": "OfflineServices/UAT_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_NextlyCrossAccounts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NextlyCrossAccounts_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "NextlyCrossAccounst_StagingTruncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/CrossAccounts",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "AllowCrossAcctXferYN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AllowCrossAcctXferYN",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OpenDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OpenDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "AccountDateLastContact",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountDateLastContact",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CurrentAccountStatusCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentAccountStatusCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentAccountStatusDesc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentAccountStatusDesc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountOwnershipCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountOwnershipCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountOwnershipDesc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountOwnershipDesc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MajorAccountTypeCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MajorAccountTypeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MinorAccountTypeCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MinorAccountTypeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MinorAccountTypeDescription",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MinorAccountTypeDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProductFullName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProductFullName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountNickName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountNickName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentBalance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentBalance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BalanceCategoryCodeEscrow",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BalanceCategoryCodeEscrow",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentBalanceEscrow",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentBalanceEscrow",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BalanceCategoryCodeUnapplied",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BalanceCategoryCodeUnapplied",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentBalanceUnapplied",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentBalanceUnapplied",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BalanceCategoryCodeLIP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BalanceCategoryCodeLIP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CurrentLIPBalance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentLIPBalance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NextPaymentDueDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NextPaymentDueDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "CurrentDueDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CurrentDueDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "LastPaymentDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastPaymentDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "LastPaymentAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastPaymentAmount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanYTDInterestPaid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LoanYTDInterestPaid",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RegularPaymentAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RegularPaymentAmount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanInterestRate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LoanInterestRate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanPriorYTDInterestPaid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LoanPriorYTDInterestPaid",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PayoffBalance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PayoffBalance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PayDownBalance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PayDownBalance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrincipalBalance",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PrincipalBalance",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AmountToPayCurrent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AmountToPayCurrent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TotalPerDiem",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalPerDiem",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TotalAmountCurrentlyDue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalAmountCurrentlyDue",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AmountPastDue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AmountPastDue",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OriginalLoanAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OriginalLoanAmount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanCurrentTerm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LoanCurrentTerm",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LoanRemainingTerm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LoanRemainingTerm",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RemainingPayments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RemainingPayments",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PaymentCalculationPeriod",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PaymentCalculationPeriod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreditLimitAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CreditLimitAmount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AvailableCredit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AvailableCredit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DepositInterestRate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DepositInterestRate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DepositPriorYTDInterestPaid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DepositPriorYTDInterestPaid",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DepositYTDInterestPaid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DepositYTDInterestPaid",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DepositLastInterestAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DepositLastInterestAmount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DepositLastInterestPostDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DepositLastInterestPostDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "DepositCurrentTerm",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DepositCurrentTerm",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaturityDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MaturityDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AccountType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PersonNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PersonNumber",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "CrossAcctAgreementNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CrossAcctAgreementNumber",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "CrossAcctMemberNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CrossAcctMemberNumber",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "OwnerPersonNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OwnerPersonNumber",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "OwnerOrganizationNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OwnerOrganizationNumber",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "OwnerMemberNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OwnerMemberNumber",
											"type": "Int64",
											"physicalType": "bigint"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "UAT_OfflinSource_NextlyCrossAccounts",
								"type": "DatasetReference",
								"parameters": {
									"CrossAccounts": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_OfflineDestination_NextlyCrossAccounts",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "NextlyCrossAccounst_StagingTruncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCUUAT_OfflineModeDB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE NextlyCrossAccounts_Staging"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "NextlyCrossAccounts_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Spi_InsertIntoMemberCrossAccounts]"
						},
						"linkedServiceName": {
							"referenceName": "SCCUUAT_OfflineModeDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/CrossAccounts",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "UAT_Completed_CrossAccounts_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_Completed_CrossAccounts_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "NextlyCrossAccounts*.csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/UAT/CrossAccounts"
					}
				},
				"folder": {
					"name": "OfflineServices/UAT_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_UserCreditCards')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UserCreditCards_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "UserCreditCards_StagingTruncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/UserCreditCards",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MEMBERTYPE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MEMBERTYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DNAACCTNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DNAACCTNBR",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "CCMACCTNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CCMACCTNBR",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "NEXTLYPERSONNUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NEXTLYPERSONNUMBER",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "DNABUSINESSORGNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DNABUSINESSORGNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DNAMEMBERNUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DNAMEMBERNUMBER",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "NEXTLYSIGNUPDATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NEXTLYSIGNUPDATE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DNACREDITCARDAGREEMENTNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DNACREDITCARDAGREEMENTNBR",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Textbox6",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Textbox6",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Textbox14",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Textbox14",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Textbox12",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Textbox12",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Textbox10",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Textbox10",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Textbox8",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Textbox8",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "UAT_OfflinSource_UserCreditCards",
								"type": "DatasetReference",
								"parameters": {
									"UserCreditCards": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_OfflineDestination_UserCreditCards",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "UserCreditCards_StagingTruncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCUUAT_OfflineModeDB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[UserCreditCards_Staging]"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "UserCreditCards_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Spi_InsertInToMemberCreditCardDetails]"
						},
						"linkedServiceName": {
							"referenceName": "SCCUUAT_OfflineModeDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "completed copy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/UserCreditCards",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "UAT_Completed_UserCreditCards_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_Completed_UserCreditCards_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "Nextly User Credit Cards DNA_CCM*.csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/UAT/UserCreditCards"
					}
				},
				"folder": {
					"name": "OfflineServices/UAT_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UserCreditCards')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UserCreditCards_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "UserCreditCards_StagingTruncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/UserCreditCards",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MEMBERTYPE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MEMBERTYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DNAACCTNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DNAACCTNBR",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "CCMACCTNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CCMACCTNBR",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "NEXTLYPERSONNUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NEXTLYPERSONNUMBER",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "DNABUSINESSORGNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DNABUSINESSORGNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DNAMEMBERNUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DNAMEMBERNUMBER",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "NEXTLYSIGNUPDATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NEXTLYSIGNUPDATE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DNACREDITCARDAGREEMENTNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DNACREDITCARDAGREEMENTNBR",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Textbox6",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Textbox6",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Textbox14",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Textbox14",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Textbox12",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Textbox12",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Textbox10",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Textbox10",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Textbox8",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Textbox8",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dev_OfflinSource_UserCreditCards",
								"type": "DatasetReference",
								"parameters": {
									"UserCreditCards": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_OfflineDestination_UserCreditCards",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "UserCreditCards_StagingTruncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE UserCreditCards_Staging"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "UserCreditCards_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Spi_InsertInToMemberCreditCardDetails]"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "completed copy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/UserCreditCards",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DEV_Completed_UserCreditCards_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_Completed_UserCreditCards_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "Nextly User Credit Cards DNA_CCM*.csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/DEV/UserCreditCards"
					}
				},
				"folder": {
					"name": "OfflineServices/Dev_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CK_SAV_Accounttransactions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CK_SAV_Accounttransactions_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CK_SAV_Accounttransactions_StagingTruncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/CK_SAV_Accounttransactions",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_POSTING_DATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_POSTING_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "RTXN_ACTIVITY_DATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_ACTIVITY_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DEBIT_CREDIT_FLAG",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DEBIT_CREDIT_FLAG",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_STATUS_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_STATUS_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_STATUS_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_STATUS_DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_TYPE_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_TYPE_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_AMOUNT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_AMOUNT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "EXTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EXTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EXTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EXTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dev_OfflinSource_CK_SAV_Accounttransactions",
								"type": "DatasetReference",
								"parameters": {
									"CK_SAV_Accounttransactionsons_Staging": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_OfflineDestination_CK_SAV_Accounttransactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CK_SAV_Accounttransactions_StagingTruncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[CK_SAV_Accounttransactions_Staging]"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CK_SAV_Accounttransactions_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Spi_InsertToAccountTransactionsDetails]"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "completed copy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/CK_SAV_Accounttransactions",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DEV_Completed_CK_SAV_Accounttransactions_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_Completed_CK_SAV_Accounttransactions_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Execute_DepositTransaction_Archive",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "completed copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Dev_DepositTransaction_Archival",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "Nextly CK SAV TD Transactions Prior 15 Days*.csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/DEV/CK_SAV_Accounttransactions"
					}
				},
				"folder": {
					"name": "OfflineServices/Dev_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NextlyLoanTransactions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NextlyLoanTransactions_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "NextlyLoanTransactions_StagingTruncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/NextlyLoanTransactions",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "SCCU_DataFactory_Storage",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_POSTING_DATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_POSTING_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "RTXN_ACTIVITY_DATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_ACTIVITY_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DEBIT_CREDIT_FLAG",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DEBIT_CREDIT_FLAG",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_STATUS_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_STATUS_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_STATUS_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_STATUS_DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_TYPE_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_TYPE_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_AMOUNT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_AMOUNT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "EXTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EXTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EXTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EXTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dev_OfflinSource_NExtlyLoanTransactions",
								"type": "DatasetReference",
								"parameters": {
									"NextlyLoanTransactions": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_OfflineDestination_NextlyLoanTransactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "NextlyLoanTransactions_StagingTruncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE NExtlyLoanTransactions_Staging"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "NextlyLoanTransactions_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Spi_InsertToLoanTransactionsDetails]"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_OfflineDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/NextlyLoanTransactions",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DEV_Completed_NextlyLoanTransactions_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_Completed_NextlyLoanTransactions_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Execute_LoanTransaction_Archive",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy data2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Dev_LoanTransaction_Archival",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "Nextly Loan Account Transactions Prior 15 Days*.csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/DEV/NextlyLoanTransactions"
					}
				},
				"folder": {
					"name": "OfflineServices/Dev_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_CK_SAV_Accounttransactions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CK_SAV_Accounttransactions_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CK_SAV_Accounttransactions_StagingTruncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "QA/CK_SAV_Accounttransactions",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_POSTING_DATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_POSTING_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "RTXN_ACTIVITY_DATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_ACTIVITY_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DEBIT_CREDIT_FLAG",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DEBIT_CREDIT_FLAG",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_STATUS_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_STATUS_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_STATUS_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_STATUS_DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_TYPE_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_TYPE_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_AMOUNT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_AMOUNT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "EXTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EXTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EXTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EXTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "QA_OfflinSource_CK_SAV_Accounttransactions",
								"type": "DatasetReference",
								"parameters": {
									"CK_SAV_Accounttransactionsons_Staging": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "QA_OfflineDestination_CK_SAV_Accounttransactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CK_SAV_Accounttransactions_StagingTruncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCUQA_OfflineModeDB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[CK_SAV_Accounttransactions_Staging]"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CK_SAV_Accounttransactions_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Spi_InsertToAccountTransactionsDetails]"
						},
						"linkedServiceName": {
							"referenceName": "SCCUQA_OfflineModeDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "completed copy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "QA/CK_SAV_Accounttransactions",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "QA_Completed_CK_SAV_Accounttransactions_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "QA_Completed_CK_SAV_Accounttransactions_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Archival",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "completed copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "QA_DepositTransaction_Archival",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "Nextly CK SAV TD Transactions Prior 15 Days*.csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/QA/CK_SAV_Accounttransactions"
					}
				},
				"folder": {
					"name": "OfflineServices/QA_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_NextlyLoanTransactions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NextlyLoanTransactions_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "NextlyLoanTransactions_StagingTruncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "QA/NextlyLoanTransactions",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "SCCU_DataFactory_Storage",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_POSTING_DATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_POSTING_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "RTXN_ACTIVITY_DATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_ACTIVITY_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DEBIT_CREDIT_FLAG",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DEBIT_CREDIT_FLAG",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_STATUS_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_STATUS_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_STATUS_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_STATUS_DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_TYPE_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_TYPE_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_AMOUNT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_AMOUNT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "EXTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EXTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EXTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EXTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "QA_OfflinSource_NExtlyLoanTransactions",
								"type": "DatasetReference",
								"parameters": {
									"NextlyLoanTransactions": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "QA_OfflineDestination_NextlyLoanTransactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "NextlyLoanTransactions_StagingTruncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCUQA_OfflineModeDB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE NExtlyLoanTransactions_Staging"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "NextlyLoanTransactions_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Spi_InsertToLoanTransactionsDetails]"
						},
						"linkedServiceName": {
							"referenceName": "SCCUQA_OfflineModeDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "QA/NextlyLoanTransactions",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "QA_Completed_NextlyLoanTransactions_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "QA_Completed_NextlyLoanTransactions_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Archival",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy data2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "QA_LoanTransaction_Archival",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "Nextly Loan Account Transactions Prior 15 Days*.csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/QA/NextlyLoanTransactions"
					}
				},
				"folder": {
					"name": "OfflineServices/QA_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDEV_BusinessData_DynamicRetention')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BusinessData_Archive",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='BusinessData' AND IsArchiveEnabled=1 AND ArchiveDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Archive_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "BusinessData_Archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('BusinessData_Archive').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "BusinessData_Script",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "BusinessData_Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCU_BusinessDataDev",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().SourceSchemaName}.@{item().SourceTableName}  WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))\n\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "BusinessData_Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().SourceSchemaName}.@{item().SourceTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SCCUDev_BusinessData_Source",
											"type": "DatasetReference",
											"parameters": {
												"SourceDB": "@item().SourceDBName",
												"SourceTable": "@item().SourceTableName",
												"SourceSchema": "@item().SourceSchemaName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DEV_Archive_Destination",
											"type": "DatasetReference",
											"parameters": {
												"DestinationTable": {
													"value": "@item().DestinationTableName",
													"type": "Expression"
												},
												"DestinationSchema": {
													"value": "@item().DestinationSchemaName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "BusinessData_Purge",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Archive_ForEach",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='BusinessData' AND IsPurgeEnabled=1 AND PurgeDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Purge_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "BusinessData_Purge",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('BusinessData_Purge').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "BusinessData_Purge_Script",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCU_ArchiveDev",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DECLARE @BatchSize INT = 10000;  -- Define the batch size for deletion\nDECLARE @RowsAffected INT = 1;    -- Initialize with a non-zero value\nDECLARE @TotalRowsDeleted INT = 0; -- Variable to accumulate total rows deleted\nDECLARE @LoopCount INT = 0;       -- Variable to count the number of loop executions\n \n-- Start the batch-wise deletion process\nWHILE @RowsAffected > 0\nBEGIN\n    -- Increment the loop execution count\n    SET @LoopCount = @LoopCount + 1;\n \n    -- Delete top (@BatchSize) rows based on the purge condition\n    DELETE TOP (@BatchSize)\n    FROM @{item().DestinationSchemaName}.@{item().DestinationTableName}\n    WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().PurgeDays}, CAST(GETDATE() AS DATE));\n \n    -- Get the number of rows deleted in the last batch\n    SET @RowsAffected = @@ROWCOUNT;\n \n    -- Accumulate the total number of rows deleted\n    SET @TotalRowsDeleted = @TotalRowsDeleted + @RowsAffected;\nEND\n \n-- Optionally, you can output the total rows deleted and loop execution count for logging purposes\nSELECT @TotalRowsDeleted AS TotalRowsDeleted, @LoopCount AS LoopExecutionCount;",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SCCUDEV_Static_BusinessData_DynamicRetention",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUQA_BusinessData_DynamicRetention')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BusinessData_Archive",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='BusinessData' AND IsArchiveEnabled=1 AND ArchiveDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUQA_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Archive_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "BusinessData_Archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('BusinessData_Archive').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "BusinessData_Script",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "BusinessData_Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCU_BusinessDataQA",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().SourceSchemaName}.@{item().SourceTableName}  WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))\n\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "BusinessData_Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().SourceSchemaName}.@{item().SourceTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SCCUQA_BusinessData_Source",
											"type": "DatasetReference",
											"parameters": {
												"SourceDB": "@item().SourceDBName",
												"SourceTable": "@item().SourceTableName",
												"SourceSchema": "@item().SourceSchemaName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "QA_Archive_Destination",
											"type": "DatasetReference",
											"parameters": {
												"DestinationTable": {
													"value": "@item().DestinationTableName",
													"type": "Expression"
												},
												"DestinationSchema": {
													"value": "@item().DestinationSchemaName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "BusinessData_Purge",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Archive_ForEach",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='BusinessData' AND IsPurgeEnabled=1 AND PurgeDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUQA_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Purge_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "BusinessData_Purge",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('BusinessData_Purge').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "BusinessData_Purge_Script",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCUQA_ArchiveDB",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DECLARE @BatchSize INT = 10000;  -- Define the batch size for deletion\nDECLARE @RowsAffected INT = 1;    -- Initialize with a non-zero value\nDECLARE @TotalRowsDeleted INT = 0; -- Variable to accumulate total rows deleted\nDECLARE @LoopCount INT = 0;       -- Variable to count the number of loop executions\n \n-- Start the batch-wise deletion process\nWHILE @RowsAffected > 0\nBEGIN\n    -- Increment the loop execution count\n    SET @LoopCount = @LoopCount + 1;\n \n    -- Delete top (@BatchSize) rows based on the purge condition\n    DELETE TOP (@BatchSize)\n    FROM @{item().DestinationSchemaName}.@{item().DestinationTableName}\n    WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().PurgeDays}, CAST(GETDATE() AS DATE));\n \n    -- Get the number of rows deleted in the last batch\n    SET @RowsAffected = @@ROWCOUNT;\n \n    -- Accumulate the total number of rows deleted\n    SET @TotalRowsDeleted = @TotalRowsDeleted + @RowsAffected;\nEND\n \n-- Optionally, you can output the total rows deleted and loop execution count for logging purposes\nSELECT @TotalRowsDeleted AS TotalRowsDeleted, @LoopCount AS LoopExecutionCount;",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SCCUQA_Static_BusinessData_DynamicRetention",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUUAT_BusinessData_DynamicRetention')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BusinessData_Archive",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='BusinessData' AND IsArchiveEnabled=1 AND ArchiveDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUUAT_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Archive_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "BusinessData_Archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('BusinessData_Archive').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "BusinessData_Script",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "BusinessData_Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCU_BusinessDataUAT",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().SourceSchemaName}.@{item().SourceTableName}  WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))\n\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "BusinessData_Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().SourceSchemaName}.@{item().SourceTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SCCUUAT_BusinessData_Source",
											"type": "DatasetReference",
											"parameters": {
												"SourceDB": "@item().SourceDBName",
												"SourceTable": "@item().DestinationTableName",
												"SourceSchema": "@item().DestinationSchemaName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "UAT_Archive_Destination",
											"type": "DatasetReference",
											"parameters": {
												"DestinationTable": {
													"value": "@item().DestinationTableName",
													"type": "Expression"
												},
												"DestinationSchema": {
													"value": "@item().DestinationSchemaName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "BusinessData_Purge",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Archive_ForEach",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='BusinessData' AND IsPurgeEnabled=1 AND PurgeDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUUAT_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Purge_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "BusinessData_Purge",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('BusinessData_Purge').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "BusinessData_Purge_Script",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCUUAT_ArchiveDB",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DECLARE @BatchSize INT = 10000;  -- Define the batch size for deletion\nDECLARE @RowsAffected INT = 1;    -- Initialize with a non-zero value\nDECLARE @TotalRowsDeleted INT = 0; -- Variable to accumulate total rows deleted\nDECLARE @LoopCount INT = 0;       -- Variable to count the number of loop executions\n \n-- Start the batch-wise deletion process\nWHILE @RowsAffected > 0\nBEGIN\n    -- Increment the loop execution count\n    SET @LoopCount = @LoopCount + 1;\n \n    -- Delete top (@BatchSize) rows based on the purge condition\n    DELETE TOP (@BatchSize)\n    FROM @{item().DestinationSchemaName}.@{item().DestinationTableName}\n    WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().PurgeDays}, CAST(GETDATE() AS DATE));\n \n    -- Get the number of rows deleted in the last batch\n    SET @RowsAffected = @@ROWCOUNT;\n \n    -- Accumulate the total number of rows deleted\n    SET @TotalRowsDeleted = @TotalRowsDeleted + @RowsAffected;\nEND\n \n-- Optionally, you can output the total rows deleted and loop execution count for logging purposes\nSELECT @TotalRowsDeleted AS TotalRowsDeleted, @LoopCount AS LoopExecutionCount;",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SCCUUAT_Static_BusinessData_DynamicRetention",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_CK_SAV_Accounttransactions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CK_SAV_Accounttransactions_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CK_SAV_Accounttransactions_StagingTruncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/CK_SAV_Accounttransactions",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_POSTING_DATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_POSTING_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "RTXN_ACTIVITY_DATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_ACTIVITY_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DEBIT_CREDIT_FLAG",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DEBIT_CREDIT_FLAG",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_STATUS_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_STATUS_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_STATUS_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_STATUS_DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_TYPE_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_TYPE_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_AMOUNT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_AMOUNT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "EXTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EXTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EXTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EXTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "UAT_OfflinSource_CK_SAV_Accounttransactions",
								"type": "DatasetReference",
								"parameters": {
									"CK_SAV_Accounttransactionsons_Staging": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_OfflineDestination_CK_SAV_Accounttransactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CK_SAV_Accounttransactions_StagingTruncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCUUAT_OfflineModeDB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[CK_SAV_Accounttransactions_Staging]"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CK_SAV_Accounttransactions_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Spi_InsertToAccountTransactionsDetails]"
						},
						"linkedServiceName": {
							"referenceName": "SCCUUAT_OfflineModeDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Execute Deposit Transaction Archive",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "completed copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UAT_DepositTransaction_Archival",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "completed copy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/CK_SAV_Accounttransactions",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "UAT_Completed_CK_SAV_Accounttransactions_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_Completed_CK_SAV_Accounttransactions_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "Nextly CK SAV TD Transactions Prior 15 Days*.csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/UAT/CK_SAV_Accounttransactions"
					}
				},
				"folder": {
					"name": "OfflineServices/UAT_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/UAT_DepositTransaction_Archival')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_NextlyLoanTransactions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NextlyLoanTransactions_CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "NextlyLoanTransactions_StagingTruncate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/NextlyLoanTransactions",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "SCCU_DataFactory_Storage",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_NUMBER",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_POSTING_DATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_POSTING_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "RTXN_ACTIVITY_DATE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_ACTIVITY_DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DEBIT_CREDIT_FLAG",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DEBIT_CREDIT_FLAG",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_STATUS_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_STATUS_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_STATUS_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_STATUS_DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_TYPE_CODE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_TYPE_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_DESCRIPTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RTXN_AMOUNT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RTXN_AMOUNT",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "EXTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EXTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EXTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EXTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INTERNAL_RTXN_DESCNBR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "INTERNAL_RTXN_DESCTEXT",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "UAT_OfflinSource_NExtlyLoanTransactions",
								"type": "DatasetReference",
								"parameters": {
									"NextlyLoanTransactions": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_OfflineDestination_NextlyLoanTransactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "NextlyLoanTransactions_StagingTruncate",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCUUAT_OfflineModeDB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE NExtlyLoanTransactions_Staging"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "NextlyLoanTransactions_CopyData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Spi_InsertToLoanTransactionsDetails]"
						},
						"linkedServiceName": {
							"referenceName": "SCCUUAT_OfflineModeDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Execute Loan Transaction Archive",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy data2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UAT_LoanTransaction_Archival",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/NextlyLoanTransactions",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "UAT_Completed_NextlyLoanTransactions_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_Completed_NextlyLoanTransactions_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "Nextly Loan Account Transactions Prior 15 Days*.csv"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "offline-services/UAT/NextlyLoanTransactions"
					}
				},
				"folder": {
					"name": "OfflineServices/UAT_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/UAT_LoanTransaction_Archival')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MemberData",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MemberDataDetails",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "accounts",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MemberData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "NextlyAccountDetails",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "OfflineServices/Dev_OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEV_ThresholdAlert')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Nextly_ThresholdAlert_DEV",
							"type": "PipelineReference"
						},
						"parameters": {
							"FileName": "[parameters('DEV_ThresholdAlert_properties_Nextly_ThresholdAlert_DEV_parameters_FileName')]",
							"FilePath": "[parameters('DEV_ThresholdAlert_properties_Nextly_ThresholdAlert_DEV_parameters_FilePath')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/to-nextly/blobs/DEV/ThresholdAlerts/",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('DEV_ThresholdAlert_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		}
	]
}