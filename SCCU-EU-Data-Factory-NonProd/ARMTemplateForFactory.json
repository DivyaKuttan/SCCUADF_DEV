{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "SCCU-EU-Data-Factory-NonProd"
		},
		"SCCUDev_Admin_LogDB_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sccudevsql01.database.windows.net"
		},
		"SCCUDev_Admin_LogDB_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SCCUDev_Admin_LogDB"
		},
		"SCCUDev_Admin_MetaDB_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sccudevsql01.database.windows.net"
		},
		"SCCUDev_Admin_MetaDB_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SCCUDev_Admin_MetaDB"
		},
		"SCCUDev_Anonymous_LogDB_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sccudevsql01.database.windows.net"
		},
		"SCCUDev_Anonymous_LogDB_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SCCUDev_Anonymous_LogDB"
		},
		"SCCUDev_Anonymous_MetaDB_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sccudevsql01.database.windows.net"
		},
		"SCCUDev_Anonymous_MetaDB_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SCCUDev_Anonymous_MetaDB"
		},
		"SCCUQA_ArchiveDB_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sccuqasql01.database.windows.net"
		},
		"SCCUQA_ArchiveDB_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SCCUQA_ArchiveDB"
		},
		"SCCUQA_LogDB_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sccuqasql01.database.windows.net"
		},
		"SCCUQA_LogDB_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SCCUQA_LogDB"
		},
		"SCCUQA_MetaDB_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sccuqasql01.database.windows.net"
		},
		"SCCUQA_MetaDB_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SCCUQA_MetaDB"
		},
		"SCCU_ADFPOC_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sccudevsql01.database.windows.net"
		},
		"SCCU_ADFPOC_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SCCU_ADF_POC"
		},
		"SCCU_ArchiveDev_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sccudevsql01.database.windows.net"
		},
		"SCCU_ArchiveDev_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SCCUDev_ArchiveDB"
		},
		"SCCU_BBAlertsDev_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sccudevsql01.database.windows.net"
		},
		"SCCU_BBAlertsDev_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SCCUDEV_BBAlerts"
		},
		"SCCU_BBAlertsUAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sccuuatsql01.database.windows.net"
		},
		"SCCU_BBAlertsUAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SCCUUAT_BBAlerts"
		},
		"SCCU_BusinessDataDev_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sccudevsql01.database.windows.net"
		},
		"SCCU_BusinessDataDev_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SCCU_BusinessData_Dev"
		},
		"SCCU_BusinessDataUAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sccuuatsql01.database.windows.net"
		},
		"SCCU_BusinessDataUAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SCCU_BusinessData_UAT"
		},
		"SCCU_DataFactory_Storage_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://sccudatafactorystorage.blob.core.windows.net/"
		},
		"SCCU_LogDBDev_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sccudevsql01.database.windows.net"
		},
		"SCCU_LogDBDev_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SCCUDEV_LogDB"
		},
		"SCCU_MetaDBDev_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sccudevsql01.database.windows.net"
		},
		"SCCU_MetaDBDev_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SCCUDev_MetaDB"
		},
		"DEV_ThresholdAlert_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a8cd236d-26bd-46eb-81fc-dea8aac0fe3c/resourceGroups/SCCU-EU-PROD-SRV-RG/providers/Microsoft.Storage/storageAccounts/sccudatafactorystorage"
		},
		"DEV_TransactionAlert_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a8cd236d-26bd-46eb-81fc-dea8aac0fe3c/resourceGroups/SCCU-EU-PROD-SRV-RG/providers/Microsoft.Storage/storageAccounts/sccudatafactorystorage"
		},
		"Dev_LoanDueTrigger_properties_Nextly_LoanDueAlerts_DEV_parameters_FileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"Dev_LoanDueTrigger_properties_Nextly_LoanDueAlerts_DEV_parameters_FilePath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"Dev_LoanDueTrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a8cd236d-26bd-46eb-81fc-dea8aac0fe3c/resourceGroups/SCCU-EU-PROD-SRV-RG/providers/Microsoft.Storage/storageAccounts/sccudatafactorystorage"
		},
		"UAT_LoanDueTrigger_properties_Nextly_LoanDueAlerts_UAT_parameters_FileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"UAT_LoanDueTrigger_properties_Nextly_LoanDueAlerts_UAT_parameters_FilePath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"UAT_LoanDueTrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a8cd236d-26bd-46eb-81fc-dea8aac0fe3c/resourceGroups/SCCU-EU-PROD-SRV-RG/providers/Microsoft.Storage/storageAccounts/sccudatafactorystorage"
		},
		"UAT_TransactionAlert_properties_Nextly_TransactionAlert_UAT_parameters_FileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"UAT_TransactionAlert_properties_Nextly_TransactionAlert_UAT_parameters_FilePath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"UAT_TransactionAlert_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a8cd236d-26bd-46eb-81fc-dea8aac0fe3c/resourceGroups/SCCU-EU-PROD-SRV-RG/providers/Microsoft.Storage/storageAccounts/sccudatafactorystorage"
		},
		"UAT_thresholdAlert_properties_Nextly_ThresholdAlert_UAT_parameters_FileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"UAT_thresholdAlert_properties_Nextly_ThresholdAlert_UAT_parameters_FilePath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"UAT_thresholdAlert_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a8cd236d-26bd-46eb-81fc-dea8aac0fe3c/resourceGroups/SCCU-EU-PROD-SRV-RG/providers/Microsoft.Storage/storageAccounts/sccudatafactorystorage"
		},
		"SCCU_DataFactory_FileShare_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/a8cd236d-26bd-46eb-81fc-dea8aac0fe3c/resourceGroups/SCCU-EU-PROD-SRV-RG/providers/Microsoft.Storage/storageAccounts/sccudatafactorystorage"
		},
		"SCCU_DataFactory_FileShare_properties_groupId": {
			"type": "string",
			"defaultValue": "file"
		},
		"sccudatafactorystorage_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/a8cd236d-26bd-46eb-81fc-dea8aac0fe3c/resourceGroups/SCCU-EU-PROD-SRV-RG/providers/Microsoft.Storage/storageAccounts/sccudatafactorystorage"
		},
		"sccudatafactorystorage_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"sccudatafactorystorage_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"sccudatafactorystorage.blob.core.windows.net"
			]
		},
		"sccudrsql01_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/a8cd236d-26bd-46eb-81fc-dea8aac0fe3c/resourceGroups/SCCU-CU-DR-SRV-RG/providers/Microsoft.Sql/managedInstances/sccudrsql01"
		},
		"sccudrsql01_properties_groupId": {
			"type": "string",
			"defaultValue": "managedInstance"
		},
		"sccuprodsql01_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/a8cd236d-26bd-46eb-81fc-dea8aac0fe3c/resourceGroups/SCCU-EU-PROD-SRV-RG/providers/Microsoft.Sql/managedInstances/sccuprodsql01"
		},
		"sccuprodsql01_properties_groupId": {
			"type": "string",
			"defaultValue": "managedInstance"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Archive')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MasterTable_lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_SelectAppDRData]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dev_BrowserTabLogsSourceDataSet",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ArchiveEnabled_Filter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ArchiveEnabled_Filter').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "Switch1",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "ArchiveDays_Set variable",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "TableName_Set variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().TableName\r\n",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "ErrorLog",
												"activities": [
													{
														"name": "ErrorLog_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM ErrorLog WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBatchSize": 1000,
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false,
																"disableMetricsCollection": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "ErrorID",
																			"type": "Int32",
																			"physicalType": "int"
																		},
																		"sink": {
																			"name": "ErrorID",
																			"type": "Int32",
																			"physicalType": "int"
																		}
																	},
																	{
																		"source": {
																			"name": "TenantID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "SystemIP",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "SystemIP",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "SiteURL",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "SiteURL",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Type",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Type",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "InnerException",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "InnerException",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedBy",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "CreatedBy",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "Comments",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "Comments",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_ErrorLogSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveErrorLogDataset",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "ErrorLog_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "ErrorLog_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ErrorLogSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "TransactionLog_Json",
												"activities": [
													{
														"name": "TransactionLog_Json_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM TransactionLog_Json\n WHERE CAST(modifiedDate AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "TransId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "TransId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "SessionId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "SessionId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "ProcessId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "ProcessId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "reference",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "reference",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Json",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "Json",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "modifiedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "modifiedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_TransactionLog_JsonDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveTransactionLog_JsonDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "TransactionLog_Json_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "TransactionLog_Json_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_TransactionLog_JsonDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "ExternalRequestTxs",
												"activities": [
													{
														"name": "ExternalRequestTxs_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM ExternalRequestTxs\n WHERE CAST(RequestDateTime AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "WebServiceTxsID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		},
																		"sink": {
																			"name": "WebServiceTxsID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		}
																	},
																	{
																		"source": {
																			"name": "DataSourceID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		},
																		"sink": {
																			"name": "DataSourceID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		}
																	},
																	{
																		"source": {
																			"name": "DatasourceName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "DatasourceName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CommandName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "CommandName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ContactId",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "ContactId",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "UserID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "RequestDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "RequestDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "ResponseDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "ResponseDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "RequestParameters",
																			"type": "String",
																			"physicalType": "text"
																		},
																		"sink": {
																			"name": "RequestParameters",
																			"type": "String",
																			"physicalType": "text"
																		}
																	},
																	{
																		"source": {
																			"name": "ResponseData",
																			"type": "String",
																			"physicalType": "text"
																		},
																		"sink": {
																			"name": "ResponseData",
																			"type": "String",
																			"physicalType": "text"
																		}
																	},
																	{
																		"source": {
																			"name": "ErrorCode",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "ErrorCode",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ErrorData",
																			"type": "String",
																			"physicalType": "text"
																		},
																		"sink": {
																			"name": "ErrorData",
																			"type": "String",
																			"physicalType": "text"
																		}
																	},
																	{
																		"source": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "EnvCode",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "EnvCode",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "RequestType",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "RequestType",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CustomerId",
																			"type": "Int32",
																			"physicalType": "int"
																		},
																		"sink": {
																			"name": "CustomerId",
																			"type": "Int32",
																			"physicalType": "int"
																		}
																	},
																	{
																		"source": {
																			"name": "InnerException",
																			"type": "String",
																			"physicalType": "text"
																		},
																		"sink": {
																			"name": "InnerException",
																			"type": "String",
																			"physicalType": "text"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_ExternalRequestTxsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveExternalRequestTxsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "ExternalRequestTxs_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "ExternalRequestTxs_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ExternalRequestTxsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "TraceData",
												"activities": [
													{
														"name": "TraceData_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM TraceData\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "ID",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "ID",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "TenantID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserHostAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserHostAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserHostName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserHostName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IP",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "IP",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "URL",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "URL",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Browser",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Browser",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "HasCookies",
																			"type": "Boolean",
																			"physicalType": "bit"
																		},
																		"sink": {
																			"name": "HasCookies",
																			"type": "Boolean",
																			"physicalType": "bit"
																		}
																	},
																	{
																		"source": {
																			"name": "InputType",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "InputType",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IsMobileDevice",
																			"type": "Boolean",
																			"physicalType": "bit"
																		},
																		"sink": {
																			"name": "IsMobileDevice",
																			"type": "Boolean",
																			"physicalType": "bit"
																		}
																	},
																	{
																		"source": {
																			"name": "BowserVersion",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "BowserVersion",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "MobileDeviceManufacturer",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "MobileDeviceManufacturer",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "MobileDeviceModel",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "MobileDeviceModel",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "LogonUser",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "LogonUser",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserObjectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserObjectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_TraceDataSourceData",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveTraceData",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "TraceData_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "TraceData_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_TraceDataSourceData",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "TransactionLog_Sql",
												"activities": [
													{
														"name": "TransactionLog_Sql_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM TransactionLog_Sql\n WHERE CAST(ModifiedTime AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "TranID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "TranID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "RecId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "RecId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormTitle",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormTitle",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Status",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Status",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "SessionId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "SessionId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "ParentId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "ParentId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "ProcessId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "ProcessId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "startTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "startTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "EndTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "EndTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "ErrorId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "ErrorId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "TimeTaken",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TimeTaken",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ModifiedTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "ModifiedTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_TransactionLog_SqlSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveTransactionLog_SqlDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "TransactionLog_Sql_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "TransactionLog_Sql_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_TransactionLog_SqlSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "FormAPITxs",
												"activities": [
													{
														"name": "FormAPITxs_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM FormAPITxs\n WHERE CAST(RequestDateTime AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "APITxsID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		},
																		"sink": {
																			"name": "APITxsID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		}
																	},
																	{
																		"source": {
																			"name": "FormID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CommandName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "CommandName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "RequestDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "RequestDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "ResponseDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "ResponseDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "RequestParameters",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "RequestParameters",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ResponseData",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "ResponseData",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ErrorCode",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "ErrorCode",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ErrorStatus",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "ErrorStatus",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ErrorData",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "ErrorData",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserHostAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserHostAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserHostName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserHostName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IP",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "IP",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "DEV_FormAPITxsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveFormAPITxsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "FormAPITxs_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "FormAPITxs_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "DEV_FormAPITxsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "BrowserTabLogs",
												"activities": [
													{
														"name": "BrowserTabLogs_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM BrowserTabLogs\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "BrowserTabId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "BrowserTabId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "LevelId",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "LevelId",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "TypeId",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "TypeId",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "RequestId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "RequestId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ParentId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "ParentId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Method",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Method",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "URL",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "URL",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "StatusCode",
																			"type": "Int32",
																			"physicalType": "int"
																		},
																		"sink": {
																			"name": "StatusCode",
																			"type": "Int32",
																			"physicalType": "int"
																		}
																	},
																	{
																		"source": {
																			"name": "Headers",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Headers",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Description",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Description",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormInfo",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormInfo",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_BrowserTabLogsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveBrowserTabLogsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "BrowserTabLogs_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "BrowserTabLogs_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_BrowserTabLogsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "BrowserTabInfo",
												"activities": [
													{
														"name": "BrowserTabInfo_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM BrowserTabInfo\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "SessionID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "SessionID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "BrowserTabId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "BrowserTabId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserAgent",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserAgent",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IpAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "IpAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_BrowserTabInfoSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveBrowserTabInfoDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "BrowserTabInfo_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "BrowserTabInfo_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_BrowserTabInfoSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "AF_Log4NetDB",
												"activities": [
													{
														"name": "AF_Log4NetDB_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM AF_Log4NetDB\n WHERE CAST(Date AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int32",
																			"physicalType": "int"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int32",
																			"physicalType": "int"
																		}
																	},
																	{
																		"source": {
																			"name": "Date",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "Date",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "Thread",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Thread",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Level",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Level",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Logger",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Logger",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Exception",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Exception",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_AF_Log4NetDBSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveAF_Log4NetDBDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "AF_Log4NetDB_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "AF_Log4NetDB_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_AF_Log4NetDBSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "NF_UserConnections",
												"activities": [
													{
														"name": "NF_UserConnections_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM NF_UserConnections\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "UserId",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "UserId",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ClientId",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "ClientId",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IP_Address",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "IP_Address",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_NF_UserConnectionsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveNF_UserConnectionsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "NF_UserConnections_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "NF_UserConnections_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_NF_UserConnectionsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "SecurityLog",
												"activities": [
													{
														"name": "SecurityLog_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM SecurityLog\n WHERE CAST(UpdateTime AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "TableName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TableName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Operation",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Operation",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Desc_before",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Desc_before",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Desc_after",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Desc_after",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UpdateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "UpdateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_SecurityLogSourceDateSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveSecurityLogDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "SecurityLog_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "SecurityLog_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_SecurityLogSourceDateSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "RefreshTokens",
												"activities": [
													{
														"name": "RefreshTokens_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM RefreshTokens\n WHERE CAST(ExpiresUtc AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "RefreshToken",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "RefreshToken",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Subject",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Subject",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IssuedUtc",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "IssuedUtc",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "ExpiresUtc",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "ExpiresUtc",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_RefreshTokensSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveRefreshTokensDataSe",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "RefreshTokens_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "RefreshTokens_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_RefreshTokensSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "UserInvalidAttempts",
												"activities": [
													{
														"name": "UserInvalidAttempts_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM UserInvalidAttempts\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "objectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "objectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "ModifiedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "ModifiedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "InvalidPasswordAttempts",
																			"type": "Int32",
																			"physicalType": "int"
																		},
																		"sink": {
																			"name": "InvalidPasswordAttempts",
																			"type": "Int32",
																			"physicalType": "int"
																		}
																	},
																	{
																		"source": {
																			"name": "IsDeleted",
																			"type": "Boolean",
																			"physicalType": "bit"
																		},
																		"sink": {
																			"name": "IsDeleted",
																			"type": "Boolean",
																			"physicalType": "bit"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_UserInvalidAttemptsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveUserInvalidAttemptsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "UserInvalidAttempts_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "UserInvalidAttempts_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_UserInvalidAttemptsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "PasswordHistory",
												"activities": [
													{
														"name": "PasswordHistory_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM PasswordHistory\n WHERE CAST(date AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "id",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		},
																		"sink": {
																			"name": "id",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		}
																	},
																	{
																		"source": {
																			"name": "userObjectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "userObjectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "password",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "password",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "date",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "date",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_PasswordHistorySourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchivePasswordHistoryDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "PasswordHistory_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "PasswordHistory_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_PasswordHistorySourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "TempUserLoginValidations",
												"activities": [
													{
														"name": "TempUserLoginValidations_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM TempUserLoginValidations\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "Key",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Key",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "ModifiedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "ModifiedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "IsDeleted",
																			"type": "Boolean",
																			"physicalType": "bit"
																		},
																		"sink": {
																			"name": "IsDeleted",
																			"type": "Boolean",
																			"physicalType": "bit"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_TempUserLoginValidationsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveTempUserLoginValidationsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "TempUserLoginValidations_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "TempUserLoginValidations_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_TempUserLoginValidationsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "RulesLog",
												"activities": [
													{
														"name": "RulesLog_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM RulesLog\n WHERE CAST(LogTime AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "LogTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "LogTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "LogJSON",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "LogJSON",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "LoginName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "LoginName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_RulesLogSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveRulesLogDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "RulesLog_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "RulesLog_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_RulesLogSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "UserLoginAttempts",
												"activities": [
													{
														"name": "UserLoginAttempts_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM UserLoginAttempts\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "ObjectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "ObjectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "Browser",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Browser",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "BrowserVersion",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "BrowserVersion",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserAgent",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserAgent",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Details",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Details",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IP",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "IP",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IsMobileDevice",
																			"type": "Boolean",
																			"physicalType": "bit"
																		},
																		"sink": {
																			"name": "IsMobileDevice",
																			"type": "Boolean",
																			"physicalType": "bit"
																		}
																	},
																	{
																		"source": {
																			"name": "MobileDeviceManufacture",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "MobileDeviceManufacture",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "MobileDeviceModel",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "MobileDeviceModel",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserHostAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserHostAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserHostName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserHostName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IsValidAttempt",
																			"type": "Boolean",
																			"physicalType": "bit"
																		},
																		"sink": {
																			"name": "IsValidAttempt",
																			"type": "Boolean",
																			"physicalType": "bit"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_UserLoginAttemptsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveUserLoginAttemptsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "UserLoginAttempts_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "UserLoginAttempts_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_UserLoginAttemptsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "UserMappingConfiguration",
												"activities": [
													{
														"name": "UserMappingConfiguration_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM UserMappingConfiguration\n WHERE CAST(LastAccessed AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "ID",
																			"type": "Int32",
																			"physicalType": "int"
																		},
																		"sink": {
																			"name": "ID",
																			"type": "Int32",
																			"physicalType": "int"
																		}
																	},
																	{
																		"source": {
																			"name": "UserID",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "UserID",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "LastAccessed",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "LastAccessed",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "Dev_UserMappingConfigurationSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "Dev_ArchiveUserMappingConfigurationDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "UserMappingConfiguration_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "UserMappingConfiguration_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_UserMappingConfigurationSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "ArchiveDays_Set variable",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "ArchiveDays",
										"value": {
											"value": "@item().ArchiveDays\r\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "TableName_Set variable",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TableName",
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "ArchiveEnabled_Filter",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "MasterTable_lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('MasterTable_lookup').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().IsArchiveEnabled,true)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "PurgeEnabled_Filter",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('MasterTable_lookup').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().IsPurgeEnabled,true)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachForPurge",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "PurgeEnabled_Filter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('PurgeEnabled_Filter').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "PurgeDays_SetVariable",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PurgeDays",
										"value": {
											"value": "@item().PurgeDays",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SwitchForPurge",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "PurgeDays_SetVariable",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "TableNamePurge_Set variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "ErrorLog",
												"activities": [
													{
														"name": "Purge_ErrorLog_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveErrorLogDataset",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "TransactionLog_Json",
												"activities": [
													{
														"name": "Purge_TransactionLog_Json_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveTransactionLog_JsonDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "ExternalRequestTxs",
												"activities": [
													{
														"name": "Purge_ExternalRequestTxs_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveExternalRequestTxsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "TraceData",
												"activities": [
													{
														"name": "Purge_TraceData_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveTraceData",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "TransactionLog_Sql",
												"activities": [
													{
														"name": "Purge_TransactionLog_Sql_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveTransactionLog_SqlDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "FormAPITxs",
												"activities": [
													{
														"name": "Purge_FormAPITxs_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveFormAPITxsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "BrowserTabLogs",
												"activities": [
													{
														"name": "Purge_BrowserTabLogs_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveBrowserTabLogsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "BrowserTabInfo",
												"activities": [
													{
														"name": "Purge_BrowserTabInfo_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveBrowserTabInfoDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "AF_Log4NetDB",
												"activities": [
													{
														"name": "Purge_AF_Log4NetDB_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveAF_Log4NetDBDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "NF_UserConnections",
												"activities": [
													{
														"name": "Purge_NF_UserConnections_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveNF_UserConnectionsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "SecurityLog",
												"activities": [
													{
														"name": "Purge_SecurityLog_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveSecurityLogDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "RefreshTokens",
												"activities": [
													{
														"name": "Purge_RefreshTokens_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveRefreshTokensDataSe",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "UserInvalidAttempts",
												"activities": [
													{
														"name": "Purge_UserInvalidAttempts_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveUserInvalidAttemptsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "PasswordHistory",
												"activities": [
													{
														"name": "Purge_PasswordHistory_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchivePasswordHistoryDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "TempUserLoginValidations",
												"activities": [
													{
														"name": "Purge_TempUserLoginValidations_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveTempUserLoginValidationsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "RulesLog",
												"activities": [
													{
														"name": "Purge_RulesLog_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveRulesLogDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "UserLoginAttempts",
												"activities": [
													{
														"name": "Purge_UserLoginAttempts_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveUserLoginAttemptsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "UserMappingConfiguration",
												"activities": [
													{
														"name": "Purge_UserMappingConfiguration_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "Dev_ArchiveUserMappingConfigurationDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "TableNamePurge_Set variable",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TableName",
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"IsArchiveEnabled": {
						"type": "String"
					},
					"ArchiveDays": {
						"type": "Integer"
					},
					"IsPurgeEnabled": {
						"type": "String"
					},
					"PurgeDays": {
						"type": "Integer"
					},
					"TableName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dev_BrowserTabLogsSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ErrorLogSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ArchiveErrorLogDataset')]",
				"[concat(variables('factoryId'), '/datasets/Dev_TransactionLog_JsonDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ArchiveTransactionLog_JsonDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ExternalRequestTxsSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ArchiveExternalRequestTxsDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_TraceDataSourceData')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ArchiveTraceData')]",
				"[concat(variables('factoryId'), '/datasets/Dev_TransactionLog_SqlSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ArchiveTransactionLog_SqlDataSet')]",
				"[concat(variables('factoryId'), '/datasets/DEV_FormAPITxsSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ArchiveFormAPITxsDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ArchiveBrowserTabLogsDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_BrowserTabInfoSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ArchiveBrowserTabInfoDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_AF_Log4NetDBSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ArchiveAF_Log4NetDBDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_NF_UserConnectionsSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ArchiveNF_UserConnectionsDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_SecurityLogSourceDateSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ArchiveSecurityLogDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_RefreshTokensSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ArchiveRefreshTokensDataSe')]",
				"[concat(variables('factoryId'), '/datasets/Dev_UserInvalidAttemptsSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ArchiveUserInvalidAttemptsDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_PasswordHistorySourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ArchivePasswordHistoryDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_TempUserLoginValidationsSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ArchiveTempUserLoginValidationsDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_RulesLogSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ArchiveRulesLogDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_UserLoginAttemptsSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ArchiveUserLoginAttemptsDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_UserMappingConfigurationSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ArchiveUserMappingConfigurationDataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEV_DynamicRetention_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline has activities which archive/purge data from souce DB's to Archive DB ",
				"activities": [
					{
						"name": "Distinct DB",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT DestinationSchemaName FROM MasterConfig WHERE IsArchiveEnabled=1 OR IsPurgeEnabled=1 ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Schemas",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Distinct DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Distinct DB').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 1,
							"activities": [
								{
									"name": "DbNameSwitch",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().DestinationSchemaName",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "MetaDb",
												"activities": [
													{
														"name": "Meta DB",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"policy": {
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "SCCUDev_MetaDB_DynamicRetention",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {}
														}
													}
												]
											},
											{
												"value": "LogDb",
												"activities": [
													{
														"name": "Log DB",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"policy": {
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "SCCUDEV_LogDB_DynamicRetention",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {}
														}
													}
												]
											},
											{
												"value": "BusinessData",
												"activities": [
													{
														"name": "BusinessData",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"policy": {
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "SCCUDEV_BusinessData_DynamicRetention",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {}
														}
													}
												]
											},
											{
												"value": "BBAlerts",
												"activities": [
													{
														"name": "BBAlerts",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"policy": {
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "SCCUDEV_BBAlerts_DynamicRetention",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {}
														}
													}
												]
											},
											{
												"value": "AdminLogDb",
												"activities": [
													{
														"name": "AdminLogDb",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"policy": {
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "SCCUDev_Admin_LogDB_DynamicRetention",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {}
														}
													}
												]
											},
											{
												"value": "AdminMetaDb",
												"activities": [
													{
														"name": "AdminMetaDb",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"policy": {
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "SCCUDev_Admin_MetaDB_DynamicRetention",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {}
														}
													}
												]
											},
											{
												"value": "AnonymousLogDb",
												"activities": [
													{
														"name": "AnonymousLogDb",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"policy": {
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "SCCUDev_Anonymous_LogDB_DynamicRetention",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {}
														}
													}
												]
											},
											{
												"value": "AnonymousMetaDb",
												"activities": [
													{
														"name": "AnonymousMetaDb",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"policy": {
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "SCCUDev_Anonymous_MetaDB_DynamicRetention",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SCCUDEV_ArchiveSqlDataset')]",
				"[concat(variables('factoryId'), '/pipelines/SCCUDev_MetaDB_DynamicRetention')]",
				"[concat(variables('factoryId'), '/pipelines/SCCUDEV_LogDB_DynamicRetention')]",
				"[concat(variables('factoryId'), '/pipelines/SCCUDEV_BusinessData_DynamicRetention')]",
				"[concat(variables('factoryId'), '/pipelines/SCCUDEV_BBAlerts_DynamicRetention')]",
				"[concat(variables('factoryId'), '/pipelines/SCCUDev_Admin_LogDB_DynamicRetention')]",
				"[concat(variables('factoryId'), '/pipelines/SCCUDev_Admin_MetaDB_DynamicRetention')]",
				"[concat(variables('factoryId'), '/pipelines/SCCUDev_Anonymous_LogDB_DynamicRetention')]",
				"[concat(variables('factoryId'), '/pipelines/SCCUDev_Anonymous_MetaDB_DynamicRetention')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nextly_LoanDueAlerts_DEV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExternalAlert_ThresholdStaging_Copy data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/LoanDueAlerts",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SubscriptionID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SubscriptionID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DueDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DueDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "AmountDue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AmountDue",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dev_LoanDueAlertsSourceDataset",
								"type": "DatasetReference",
								"parameters": {
									"TransactionFileName": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_LoanDueAlertsSinkDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "External_LoanAlertQueue_Stored procedure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ExternalAlert_ThresholdStaging_Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "spi_ExternalLoanALertQueue"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Truncate LoanDueAlerts staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Dev_LoanDueAlertsSourceDataset",
								"type": "DatasetReference",
								"parameters": {
									"TransactionFileName": " @pipeline().parameters.FileName"
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "External_LoanAlertQueue_Stored procedure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/LoanDueAlerts",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DEV_CompletedLoanDueAlertsSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_CompletedLoanDueAlertsSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate LoanDueAlerts staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sp_Truncate_External_LoanDueAlertStaging"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataDev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "LoanDueAlert09192024.txt"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "to-nextly/DEV/LoanDueAlerts"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dev_LoanDueAlertsSourceDataset')]",
				"[concat(variables('factoryId'), '/datasets/Dev_LoanDueAlertsSinkDataSet')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_BusinessDataDev')]",
				"[concat(variables('factoryId'), '/datasets/DEV_CompletedLoanDueAlertsSource')]",
				"[concat(variables('factoryId'), '/datasets/DEV_CompletedLoanDueAlertsSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nextly_LoanDueAlerts_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LoanDue_Copy data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/LoanDueAlerts",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SubscriptionID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SubscriptionID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DueDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DueDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "AmountDue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AmountDue",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Uat_LoanDueAlertsSourceDataset",
								"type": "DatasetReference",
								"parameters": {
									"TransactionFileName": " @pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Uat_LoanDueAlertsSinkDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "External_LoanAlertQueue_Stored procedure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "LoanDue_Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "spi_ExternalLoanALertQueue"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataUAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Truncate LoanDueAlerts staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Uat_LoanDueAlertsSourceDataset",
								"type": "DatasetReference",
								"parameters": {
									"TransactionFileName": " @pipeline().parameters.FileName"
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "External_LoanAlertQueue_Stored procedure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/LoanDueAlerts",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "UAT_CompletedLoanDueAlertsSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_CompletedLoanDueAlertsSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate LoanDueAlerts staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sp_Truncate_External_LoanDueAlertStaging"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataUAT",
							"type": "LinkedServiceReference"
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "LoanDueAlert09192023.txt"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "to-nextly/UAT/LoanDueAlerts"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Uat_LoanDueAlertsSourceDataset')]",
				"[concat(variables('factoryId'), '/datasets/Uat_LoanDueAlertsSinkDataSet')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_BusinessDataUAT')]",
				"[concat(variables('factoryId'), '/datasets/UAT_CompletedLoanDueAlertsSource')]",
				"[concat(variables('factoryId'), '/datasets/UAT_CompletedLoanDueAlertsSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nextly_ThresholdAlert_DEV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExternalAlert_ThresholdStaging_Copy data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "DEV/ThresholdAlerts",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName\n",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SubscriptionID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SubscriptionID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BalanceAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BalanceAmount",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dev_ThresholdSourceDataSet",
								"type": "DatasetReference",
								"parameters": {
									"ThresholdFilename": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_ThresholdSinkDastaSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ExternalAlert_ThresholdStaging_Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spi_ExtThresholdAlertToQueue]"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Truncate Threshold staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Dev_ThresholdSourceDataSet",
								"type": "DatasetReference",
								"parameters": {
									"ThresholdFilename": "@pipeline().parameters.FileName"
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/ThresholdAlerts",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DEV_CompletedThresholdSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_CompletedThresholdSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate Threshold staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_Truncate_ExternalAlert_ThresholdStaging]"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataDev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"FilePath": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dev_ThresholdSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/Dev_ThresholdSinkDastaSet')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_BusinessDataDev')]",
				"[concat(variables('factoryId'), '/datasets/DEV_CompletedThresholdSource')]",
				"[concat(variables('factoryId'), '/datasets/DEV_CompletedThresholdSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nextly_ThresholdAlert_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExternalAlert_ThresholdStaging_Copy data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "UAT/ThresholdAlerts",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName\n",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SubscriptionID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SubscriptionID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BalanceAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BalanceAmount",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "UAT_ThresholdSourceDataSet",
								"type": "DatasetReference",
								"parameters": {
									"ThresholdFilename": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_ThresholdSinkDastaSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ExternalAlert_ThresholdStaging_Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spi_ExtThresholdAlertToQueue]"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataUAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Truncate Threshold staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "UAT_ThresholdSourceDataSet",
								"type": "DatasetReference",
								"parameters": {
									"ThresholdFilename": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/ThresholdAlerts",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "UAT_CompletedThresholdSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_CompletedThresholdSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate Threshold staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_Truncate_ExternalAlert_ThresholdStaging]"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataUAT",
							"type": "LinkedServiceReference"
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"FilePath": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UAT_ThresholdSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/UAT_ThresholdSinkDastaSet')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_BusinessDataUAT')]",
				"[concat(variables('factoryId'), '/datasets/UAT_CompletedThresholdSource')]",
				"[concat(variables('factoryId'), '/datasets/UAT_CompletedThresholdSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nextly_TransactionAlert_DEV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExternalAlert_TransactionStaging_Copy data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/TransactionAlerts",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SubscriptionID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SubscriptionID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmailContent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmailContent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SMSContent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SMSContent",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dev_TransactionSourceDataset",
								"type": "DatasetReference",
								"parameters": {
									"TransactionFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_TransactionSinkDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ExternalAlert_TransactionStaging_Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "spi_ExtTransactionAlertToQueue"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Truncate Transaction staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Dev_TransactionSourceDataset",
								"type": "DatasetReference",
								"parameters": {
									"TransactionFileName": "@pipeline().parameters.FileName"
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/TransactionAlerts",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DEV_CompletedTransactionSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_CompletedTransactionSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate Transaction staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sp_Truncate_ExternalAlert_TransactionStaging"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataDev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"FilePath": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dev_TransactionSourceDataset')]",
				"[concat(variables('factoryId'), '/datasets/Dev_TransactionSinkDataSet')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_BusinessDataDev')]",
				"[concat(variables('factoryId'), '/datasets/DEV_CompletedTransactionSource')]",
				"[concat(variables('factoryId'), '/datasets/DEV_CompletedTransactionSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nextly_TransactionAlert_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExternalAlert_ThresholdStaging_Copy data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/TransactionAlerts",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SubscriptionID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SubscriptionID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmailContent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmailContent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SMSContent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SMSContent",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "UAT_TransactionSourceDataset",
								"type": "DatasetReference",
								"parameters": {
									"TransactionFileName": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_TransactionSinkDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ExternalAlert_ThresholdStaging_Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "spi_ExtTransactionAlertToQueue"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataUAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Truncate Transaction staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "UAT_TransactionSourceDataset",
								"type": "DatasetReference",
								"parameters": {
									"TransactionFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/TransactionAlerts",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "UAT_CompletedTransactionSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_CompletedTransactionSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate Transaction staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sp_Truncate_ExternalAlert_TransactionStaging"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataUAT",
							"type": "LinkedServiceReference"
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"FilePath": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UAT_TransactionSourceDataset')]",
				"[concat(variables('factoryId'), '/datasets/UAT_TransactionSinkDataSet')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_BusinessDataUAT')]",
				"[concat(variables('factoryId'), '/datasets/UAT_CompletedTransactionSource')]",
				"[concat(variables('factoryId'), '/datasets/UAT_CompletedTransactionSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_Archive')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MasterTable_lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sp_SelectAppDRData]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "QA_BrowserTabInfoSourceDataSet",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ArchiveEnabled_Filter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ArchiveEnabled_Filter').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "Switch1",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "ArchiveDays_Set variable",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "TableName_Set variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().TableName\r\n",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "ErrorLog",
												"activities": [
													{
														"name": "ErrorLog_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM ErrorLog WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBatchSize": 1000,
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false,
																"disableMetricsCollection": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "ErrorID",
																			"type": "Int32",
																			"physicalType": "int"
																		},
																		"sink": {
																			"name": "ErrorID",
																			"type": "Int32",
																			"physicalType": "int"
																		}
																	},
																	{
																		"source": {
																			"name": "TenantID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "SystemIP",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "SystemIP",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "SiteURL",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "SiteURL",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Type",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Type",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "InnerException",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "InnerException",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedBy",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "CreatedBy",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "Comments",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "Comments",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "QA_ErrorLogSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "QA_ArchiveErrorLogDataset",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "ErrorLog_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "ErrorLog_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ErrorLogSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "TransactionLog_Json",
												"activities": [
													{
														"name": "TransactionLog_Json_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM TransactionLog_Json\n WHERE CAST(modifiedDate AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "TransId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "TransId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "SessionId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "SessionId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "ProcessId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "ProcessId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "reference",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "reference",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Json",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "Json",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "modifiedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "modifiedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "QA_TransactionLog_JsonDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "QA_ArchiveTransactionLog_JsonDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "TransactionLog_Json_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "TransactionLog_Json_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_TransactionLog_JsonDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "ExternalRequestTxs",
												"activities": [
													{
														"name": "ExternalRequestTxs_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM ExternalRequestTxs\n WHERE CAST(RequestDateTime AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false,
																"disableMetricsCollection": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "WebServiceTxsID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		},
																		"sink": {
																			"name": "WebServiceTxsID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		}
																	},
																	{
																		"source": {
																			"name": "DataSourceID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		},
																		"sink": {
																			"name": "DataSourceID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		}
																	},
																	{
																		"source": {
																			"name": "DatasourceName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "DatasourceName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CommandName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "CommandName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ContactId",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "ContactId",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "UserID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "RequestDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "RequestDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "ResponseDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "ResponseDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "RequestParameters",
																			"type": "String",
																			"physicalType": "text"
																		},
																		"sink": {
																			"name": "RequestParameters",
																			"type": "String",
																			"physicalType": "text"
																		}
																	},
																	{
																		"source": {
																			"name": "ResponseData",
																			"type": "String",
																			"physicalType": "text"
																		},
																		"sink": {
																			"name": "ResponseData",
																			"type": "String",
																			"physicalType": "text"
																		}
																	},
																	{
																		"source": {
																			"name": "ErrorCode",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "ErrorCode",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ErrorData",
																			"type": "String",
																			"physicalType": "text"
																		},
																		"sink": {
																			"name": "ErrorData",
																			"type": "String",
																			"physicalType": "text"
																		}
																	},
																	{
																		"source": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "EnvCode",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "EnvCode",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "RequestType",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "RequestType",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CustomerId",
																			"type": "Int32",
																			"physicalType": "int"
																		},
																		"sink": {
																			"name": "CustomerId",
																			"type": "Int32",
																			"physicalType": "int"
																		}
																	},
																	{
																		"source": {
																			"name": "InnerException",
																			"type": "String",
																			"physicalType": "text"
																		},
																		"sink": {
																			"name": "InnerException",
																			"type": "String",
																			"physicalType": "text"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "QA_ExternalRequestTxsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "QA_ArchiveExternalRequestTxsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "ExternalRequestTxs_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "ExternalRequestTxs_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ExternalRequestTxsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "TraceData",
												"activities": [
													{
														"name": "TraceData_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM TraceData\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "ID",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "ID",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "TenantID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserHostAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserHostAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserHostName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserHostName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IP",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "IP",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "URL",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "URL",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Browser",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Browser",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "HasCookies",
																			"type": "Boolean",
																			"physicalType": "bit"
																		},
																		"sink": {
																			"name": "HasCookies",
																			"type": "Boolean",
																			"physicalType": "bit"
																		}
																	},
																	{
																		"source": {
																			"name": "InputType",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "InputType",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IsMobileDevice",
																			"type": "Boolean",
																			"physicalType": "bit"
																		},
																		"sink": {
																			"name": "IsMobileDevice",
																			"type": "Boolean",
																			"physicalType": "bit"
																		}
																	},
																	{
																		"source": {
																			"name": "BowserVersion",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "BowserVersion",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "MobileDeviceManufacturer",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "MobileDeviceManufacturer",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "MobileDeviceModel",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "MobileDeviceModel",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "LogonUser",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "LogonUser",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserObjectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserObjectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "QA_TraceDataSourceData",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "QA_ArchiveTraceData",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "TraceData_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "TraceData_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_TraceDataSourceData",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "TransactionLog_Sql",
												"activities": [
													{
														"name": "TransactionLog_Sql_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM TransactionLog_Sql\n WHERE CAST(ModifiedTime AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "TranID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "TranID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "RecId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "RecId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormTitle",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormTitle",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Status",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Status",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "SessionId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "SessionId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "ParentId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "ParentId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "ProcessId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		},
																		"sink": {
																			"name": "ProcessId",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 18
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "startTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "startTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "EndTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "EndTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "ErrorId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "ErrorId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "TimeTaken",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TimeTaken",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ModifiedTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "ModifiedTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "QA_TransactionLog_SqlSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "QA_ArchiveTransactionLog_SqlDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "TransactionLog_Sql_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "TransactionLog_Sql_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_TransactionLog_SqlSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "FormAPITxs",
												"activities": [
													{
														"name": "FormAPITxs_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM FormAPITxs\n WHERE CAST(RequestDateTime AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "APITxsID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		},
																		"sink": {
																			"name": "APITxsID",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		}
																	},
																	{
																		"source": {
																			"name": "FormID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CommandName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "CommandName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "RequestDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "RequestDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "ResponseDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "ResponseDateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "RequestParameters",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "RequestParameters",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ResponseData",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "ResponseData",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ErrorCode",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "ErrorCode",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ErrorStatus",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "ErrorStatus",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ErrorData",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "ErrorData",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserHostAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserHostAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserHostName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserHostName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IP",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "IP",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "QA_FormAPITxsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "QA_ArchiveFormAPITxsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "FormAPITxs_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "FormAPITxs_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_FormAPITxsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "BrowserTabLogs",
												"activities": [
													{
														"name": "BrowserTabLogs_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM BrowserTabLogs\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "BrowserTabId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "BrowserTabId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "LevelId",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "LevelId",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "TypeId",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "TypeId",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "RequestId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "RequestId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ParentId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "ParentId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Method",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Method",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "URL",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "URL",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "StatusCode",
																			"type": "Int32",
																			"physicalType": "int"
																		},
																		"sink": {
																			"name": "StatusCode",
																			"type": "Int32",
																			"physicalType": "int"
																		}
																	},
																	{
																		"source": {
																			"name": "Headers",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Headers",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Description",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Description",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "FormInfo",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "FormInfo",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "QA_BrowserTabLogsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "QA_ArchiveBrowserTabLogsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "BrowserTabLogs_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "BrowserTabLogs_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_BrowserTabLogsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "BrowserTabInfo",
												"activities": [
													{
														"name": "BrowserTabInfo_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM BrowserTabInfo\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "SessionID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "SessionID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "BrowserTabId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "BrowserTabId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserAgent",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserAgent",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IpAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "IpAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "QA_BrowserTabInfoSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "QA_ArchiveBrowserTabInfoDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "BrowserTabInfo_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "BrowserTabInfo_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_BrowserTabInfoSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "AF_Log4NetDB",
												"activities": [
													{
														"name": "AF_Log4NetDB_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM AF_Log4NetDB\n WHERE CAST(Date AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int32",
																			"physicalType": "int"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int32",
																			"physicalType": "int"
																		}
																	},
																	{
																		"source": {
																			"name": "Date",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "Date",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "Thread",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Thread",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Level",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Level",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Logger",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Logger",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Message",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Exception",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Exception",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "QA_AF_Log4NetDBSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "QA_ArchiveAF_Log4NetDBDBDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "AF_Log4NetDB_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "AF_Log4NetDB_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_AF_Log4NetDBSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "NF_UserConnections",
												"activities": [
													{
														"name": "NF_UserConnections_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM NF_UserConnections\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "UserId",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "UserId",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "ClientId",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "ClientId",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IP_Address",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "IP_Address",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "QA_NF_UserConnectionsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "QA_ArchiveNF_UserConnectionsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "NF_UserConnections_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "NF_UserConnections_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_NF_UserConnectionsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "SecurityLog",
												"activities": [
													{
														"name": "SecurityLog_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM SecurityLog\n WHERE CAST(UpdateTime AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "TableName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TableName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Operation",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Operation",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Desc_before",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Desc_before",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Desc_after",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Desc_after",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UpdateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "UpdateTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "QA_SecurityLogSourceDateSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "QA_ArchiveSecurityLogDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "SecurityLog_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "SecurityLog_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_SecurityLogSourceDateSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "RefreshTokens",
												"activities": [
													{
														"name": "RefreshTokens_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM RefreshTokens\n WHERE CAST(ExpiresUtc AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "RefreshToken",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "RefreshToken",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Subject",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Subject",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IssuedUtc",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "IssuedUtc",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "ExpiresUtc",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "ExpiresUtc",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "QA_RefreshTokensSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "QA_ArchiveRefreshTokensDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "RefreshTokens_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "RefreshTokens_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_RefreshTokensSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "UserInvalidAttempts",
												"activities": [
													{
														"name": "UserInvalidAttempts_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM UserInvalidAttempts\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "objectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "objectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "ModifiedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "ModifiedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "InvalidPasswordAttempts",
																			"type": "Int32",
																			"physicalType": "int"
																		},
																		"sink": {
																			"name": "InvalidPasswordAttempts",
																			"type": "Int32",
																			"physicalType": "int"
																		}
																	},
																	{
																		"source": {
																			"name": "IsDeleted",
																			"type": "Boolean",
																			"physicalType": "bit"
																		},
																		"sink": {
																			"name": "IsDeleted",
																			"type": "Boolean",
																			"physicalType": "bit"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "QA_UserInvalidAttemptsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "QA_ArchiveUserInvalidAttemptsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "UserInvalidAttempts_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "UserInvalidAttempts_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_UserInvalidAttemptsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "PasswordHistory",
												"activities": [
													{
														"name": "PasswordHistory_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM PasswordHistory\n WHERE CAST(date AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "id",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		},
																		"sink": {
																			"name": "id",
																			"type": "Decimal",
																			"physicalType": "decimal",
																			"scale": 0,
																			"precision": 15
																		}
																	},
																	{
																		"source": {
																			"name": "userObjectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "userObjectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "password",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "password",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "date",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "date",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "QA_PasswordHistorySourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "QA_ArchivePasswordHistoryDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "PasswordHistory_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "PasswordHistory_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_PasswordHistorySourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "TempUserLoginValidations",
												"activities": [
													{
														"name": "TempUserLoginValidations_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM TempUserLoginValidations\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "Key",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Key",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "ModifiedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "ModifiedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "IsDeleted",
																			"type": "Boolean",
																			"physicalType": "bit"
																		},
																		"sink": {
																			"name": "IsDeleted",
																			"type": "Boolean",
																			"physicalType": "bit"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "QA_TempUserLoginValidationsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "QA_ArchiveTempUserLoginValidationsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "TempUserLoginValidations_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "TempUserLoginValidations_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_TempUserLoginValidationsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "RulesLog",
												"activities": [
													{
														"name": "RulesLog_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM RulesLog\n WHERE CAST(LogTime AS DATE)\n < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))\n",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "TenantId",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "LogTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "LogTime",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "LogJSON",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "LogJSON",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "LoginName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "LoginName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "QA_RulesLogSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "QA_ArchiveRulesLogDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "RulesLog_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "RulesLog_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_RulesLogSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "UserLoginAttempts",
												"activities": [
													{
														"name": "UserLoginAttempts_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM UserLoginAttempts\n WHERE CAST(CreatedDate AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		},
																		"sink": {
																			"name": "Id",
																			"type": "Int64",
																			"physicalType": "bigint"
																		}
																	},
																	{
																		"source": {
																			"name": "ObjectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "ObjectGUID",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "CreatedDate",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	},
																	{
																		"source": {
																			"name": "Browser",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Browser",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "BrowserVersion",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "BrowserVersion",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserAgent",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserAgent",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "Details",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "Details",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IP",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "IP",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IsMobileDevice",
																			"type": "Boolean",
																			"physicalType": "bit"
																		},
																		"sink": {
																			"name": "IsMobileDevice",
																			"type": "Boolean",
																			"physicalType": "bit"
																		}
																	},
																	{
																		"source": {
																			"name": "MobileDeviceManufacture",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "MobileDeviceManufacture",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "MobileDeviceModel",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "MobileDeviceModel",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserHostAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserHostAddress",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserHostName",
																			"type": "String",
																			"physicalType": "varchar"
																		},
																		"sink": {
																			"name": "UserHostName",
																			"type": "String",
																			"physicalType": "varchar"
																		}
																	},
																	{
																		"source": {
																			"name": "IsValidAttempt",
																			"type": "Boolean",
																			"physicalType": "bit"
																		},
																		"sink": {
																			"name": "IsValidAttempt",
																			"type": "Boolean",
																			"physicalType": "bit"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "QA_UserLoginAttemptsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "QA_ArchiveUserLoginAttemptsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "UserLoginAttempts_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "UserLoginAttempts_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_LogDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_UserLoginAttemptsSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											},
											{
												"value": "UserMappingConfiguration",
												"activities": [
													{
														"name": "UserMappingConfiguration_Copy data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderQuery": {
																	"value": "SELECT * FROM UserMappingConfiguration\n WHERE CAST(LastAccessed AS DATE) < DATEADD(DAY, -@{variables('ArchiveDays')}, CAST(GETDATE() AS DATE))",
																	"type": "Expression"
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"sink": {
																"type": "AzureSqlSink",
																"writeBehavior": "insert",
																"sqlWriterUseTableLock": false
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"mappings": [
																	{
																		"source": {
																			"name": "ID",
																			"type": "Int32",
																			"physicalType": "int"
																		},
																		"sink": {
																			"name": "ID",
																			"type": "Int32",
																			"physicalType": "int"
																		}
																	},
																	{
																		"source": {
																			"name": "UserID",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "UserID",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "nvarchar"
																		},
																		"sink": {
																			"name": "UserName",
																			"type": "String",
																			"physicalType": "nvarchar"
																		}
																	},
																	{
																		"source": {
																			"name": "LastAccessed",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		},
																		"sink": {
																			"name": "LastAccessed",
																			"type": "DateTime",
																			"physicalType": "datetime"
																		}
																	}
																],
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "QA_UserMappingConfigurationSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														],
														"outputs": [
															{
																"referenceName": "QA_ArchiveUserMappingConfigurationDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														]
													},
													{
														"name": "UserMappingConfiguration_Lookup",
														"type": "Lookup",
														"dependsOn": [
															{
																"activity": "UserMappingConfiguration_Copy data",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[DeleteArchivedRecords_MetaDB]",
																"storedProcedureParameters": {
																	"ArchiveDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('ArchiveDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_UserMappingConfigurationSourceDataSet",
																"type": "DatasetReference",
																"parameters": {}
															},
															"firstRowOnly": false
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "ArchiveDays_Set variable",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "ArchiveDays",
										"value": {
											"value": "@item().ArchiveDays\r\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "TableName_Set variable",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TableName",
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "ArchiveEnabled_Filter",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "MasterTable_lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('MasterTable_lookup').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().IsArchiveEnabled,true)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "PurgeEnabled_Filter",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('MasterTable_lookup').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().IsPurgeEnabled,true)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachForPurge",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "PurgeEnabled_Filter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('PurgeEnabled_Filter').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "PurgeDays_SetVariable",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "PurgeDays",
										"value": {
											"value": "@item().PurgeDays",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SwitchForPurge",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "PurgeDays_SetVariable",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "TableNamePurge_Set variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().TableName",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "ErrorLog",
												"activities": [
													{
														"name": "Purge_ErrorLog_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ArchiveErrorLogDataset",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "TransactionLog_Json",
												"activities": [
													{
														"name": "Purge_TransactionLog_Json_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ArchiveTransactionLog_JsonDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "ExternalRequestTxs",
												"activities": [
													{
														"name": "Purge_ExternalRequestTxs_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ArchiveExternalRequestTxsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "TraceData",
												"activities": [
													{
														"name": "Purge_TraceData_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ArchiveTraceData",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "TransactionLog_Sql",
												"activities": [
													{
														"name": "Purge_TransactionLog_Sql_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ArchiveTransactionLog_SqlDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "FormAPITxs",
												"activities": [
													{
														"name": "Purge_FormAPITxs_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ArchiveFormAPITxsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "BrowserTabLogs",
												"activities": [
													{
														"name": "Purge_BrowserTabLogs_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ArchiveBrowserTabLogsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "BrowserTabInfo",
												"activities": [
													{
														"name": "Purge_BrowserTabInfo_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ArchiveBrowserTabInfoDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "AF_Log4NetDB",
												"activities": [
													{
														"name": "Purge_AF_Log4NetDB_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ArchiveAF_Log4NetDBDBDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "NF_UserConnections",
												"activities": [
													{
														"name": "Purge_NF_UserConnections_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ArchiveNF_UserConnectionsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "SecurityLog",
												"activities": [
													{
														"name": "Purge_SecurityLog_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ArchiveSecurityLogDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "RefreshTokens",
												"activities": [
													{
														"name": "Purge_RefreshTokens_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ArchiveRefreshTokensDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "UserInvalidAttempts",
												"activities": [
													{
														"name": "Purge_UserInvalidAttempts_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ArchiveUserInvalidAttemptsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "PasswordHistory",
												"activities": [
													{
														"name": "Purge_PasswordHistory_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ArchivePasswordHistoryDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "TempUserLoginValidations",
												"activities": [
													{
														"name": "Purge_TempUserLoginValidations_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ArchiveTempUserLoginValidationsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "RulesLog",
												"activities": [
													{
														"name": "Purge_RulesLog_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ArchiveRulesLogDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "UserLoginAttempts",
												"activities": [
													{
														"name": "Purge_UserLoginAttempts_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ArchiveUserLoginAttemptsDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											},
											{
												"value": "UserMappingConfiguration",
												"activities": [
													{
														"name": "Purge_UserMappingConfiguration_Lookup",
														"type": "Lookup",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "AzureSqlSource",
																"sqlReaderStoredProcedureName": "[[dbo].[PurgeRecords_ArchiveDB]",
																"storedProcedureParameters": {
																	"PurgeDays": {
																		"type": "Int32",
																		"value": {
																			"value": "@variables('PurgeDays')",
																			"type": "Expression"
																		}
																	},
																	"TableName": {
																		"type": "String",
																		"value": {
																			"value": "@variables('TableName')",
																			"type": "Expression"
																		}
																	}
																},
																"queryTimeout": "02:00:00",
																"partitionOption": "None"
															},
															"dataset": {
																"referenceName": "QA_ArchiveUserMappingConfigurationDataSet",
																"type": "DatasetReference",
																"parameters": {}
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "TableNamePurge_Set variable",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TableName",
										"value": {
											"value": "@item().TableName",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"IsArchiveEnabled": {
						"type": "String"
					},
					"ArchiveDays": {
						"type": "Integer"
					},
					"IsPurgeEnabled": {
						"type": "String"
					},
					"PurgeDays": {
						"type": "Integer"
					},
					"TableName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/QA_BrowserTabInfoSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_ErrorLogSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_ArchiveErrorLogDataset')]",
				"[concat(variables('factoryId'), '/datasets/QA_TransactionLog_JsonDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_ArchiveTransactionLog_JsonDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_ExternalRequestTxsSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_ArchiveExternalRequestTxsDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_TraceDataSourceData')]",
				"[concat(variables('factoryId'), '/datasets/QA_ArchiveTraceData')]",
				"[concat(variables('factoryId'), '/datasets/QA_TransactionLog_SqlSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_ArchiveTransactionLog_SqlDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_FormAPITxsSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_ArchiveFormAPITxsDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_BrowserTabLogsSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_ArchiveBrowserTabLogsDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_ArchiveBrowserTabInfoDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_AF_Log4NetDBSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_ArchiveAF_Log4NetDBDBDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_NF_UserConnectionsSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_ArchiveNF_UserConnectionsDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_SecurityLogSourceDateSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_ArchiveSecurityLogDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_RefreshTokensSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_ArchiveRefreshTokensDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_UserInvalidAttemptsSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_ArchiveUserInvalidAttemptsDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_PasswordHistorySourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_ArchivePasswordHistoryDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_TempUserLoginValidationsSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_ArchiveTempUserLoginValidationsDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_RulesLogSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_ArchiveRulesLogDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_UserLoginAttemptsSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_ArchiveUserLoginAttemptsDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_UserMappingConfigurationSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/QA_ArchiveUserMappingConfigurationDataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUAlerts_DEV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExternalAlerts_Copy data1",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "EXEC sps_GetExternalAlertRecipients",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SubscriptionID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SubscriptionID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EMAIL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EMAIL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PHONE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PHONE",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DEV_SQL_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_GetExternalAlertRecipientsDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GetThresholdAlertSubscriptions_Copy data",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "EXEC Sps_GetThresholdAlertSubscriptionsToFile",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SubscriptionID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SubscriptionID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BalanceThreshold",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BalanceThreshold",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BalanceType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BalanceType",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BalanceTypeAvailable",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BalanceTypeAvailable",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DEV_SQL_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_GetThresholdAlertSubscriptionsDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GetTransactionAlertSubscription_Copy data",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "EXEC sps_GetTransactionAlertSubscriptionToFile",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SubscriptionID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SubscriptionID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccountID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TransactionTypeString",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TransactionTypeString",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NoAmountFlag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "NoAmountFlag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MoreThanFlag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MoreThanFlag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MoreThanAmount",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MoreThanAmount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LessThanFlag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LessThanFlag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LessThanAmount",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LessThanAmount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Language",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Language",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DEV_SQL_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_GetTransactionAlertSubscriptionDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Count_ExternalAlerts",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sps_GetExternalAlertRecipients]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DEV_SQL_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set_RowCount_ExternalAlerts",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Count_ExternalAlerts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RowCount_ExternalAlerts",
							"value": {
								"value": "@length(activity('Count_ExternalAlerts').output.value)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Check_RowCount_ExternalAlerts",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set_RowCount_ExternalAlerts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(variables('RowCount_ExternalAlerts'), 0)\n",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExternalAlerts_Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "EXEC sps_GetExternalAlertRecipients",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SubscriptionID",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SubscriptionID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "AccountID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "AccountID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "EMAIL",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "EMAIL",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "PHONE",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "PHONE",
														"type": "String",
														"physicalType": "String"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DEV_SQL_DataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DEV_GetExternalAlertRecipientsDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Count_ThresholdAlerts",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[Sps_GetThresholdAlertSubscriptionsToFile]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DEV_SQL_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set_RowCount_ThresholdAlerts",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Count_ThresholdAlerts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RowCount_ThresholdAlerts",
							"value": {
								"value": "@length(activity('Count_ThresholdAlerts').output.value)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Check_RowCount_ThresholdAlerts",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set_RowCount_ThresholdAlerts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(variables('RowCount_ThresholdAlerts'), 0)\n",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "GetThresholdAlertSubscriptions_Copy data_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "EXEC Sps_GetThresholdAlertSubscriptionsToFile",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SubscriptionID",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SubscriptionID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "AccountID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "AccountID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "BalanceThreshold",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "BalanceThreshold",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "BalanceType",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "BalanceType",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "BalanceTypeAvailable",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "BalanceTypeAvailable",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Type",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "Type",
														"type": "String",
														"physicalType": "String"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DEV_SQL_DataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DEV_GetThresholdAlertSubscriptionsDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Count_TransactionAlerts",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sps_GetTransactionAlertSubscriptionToFile]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DEV_SQL_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set_RowCount_TransactionAlerts",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Count_TransactionAlerts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RowCount_TransactionAlerts",
							"value": {
								"value": "@length(activity('Count_TransactionAlerts').output.value)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Check_RowCount_Transaction",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set_RowCount_TransactionAlerts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(variables('RowCount_TransactionAlerts'), 0)\n",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "GetTransactionAlertSubscription_Copy data_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "EXEC sps_GetTransactionAlertSubscriptionToFile",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SubscriptionID",
														"type": "Int64",
														"physicalType": "bigint"
													},
													"sink": {
														"name": "SubscriptionID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "AccountID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "AccountID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "TransactionTypeString",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "TransactionTypeString",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "NoAmountFlag",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "NoAmountFlag",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "MoreThanFlag",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "MoreThanFlag",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "MoreThanAmount",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "MoreThanAmount",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "LessThanFlag",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "LessThanFlag",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "LessThanAmount",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "LessThanAmount",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Language",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "Language",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Type",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "Type",
														"type": "String",
														"physicalType": "String"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DEV_SQL_DataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DEV_GetTransactionAlertSubscriptionDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DateFormat": {
						"type": "String"
					},
					"FromDateTime": {
						"type": "String"
					},
					"SampleDate": {
						"type": "String"
					},
					"RowCount_ExternalAlerts": {
						"type": "Integer"
					},
					"RowCount_ThresholdAlerts": {
						"type": "Integer"
					},
					"RowCount_TransactionAlerts": {
						"type": "Integer"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DEV_SQL_DataSet')]",
				"[concat(variables('factoryId'), '/datasets/DEV_GetExternalAlertRecipientsDataSet')]",
				"[concat(variables('factoryId'), '/datasets/DEV_GetThresholdAlertSubscriptionsDataSet')]",
				"[concat(variables('factoryId'), '/datasets/DEV_GetTransactionAlertSubscriptionDataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDEV_BBAlerts_DynamicRetention')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BBAlerts_Archive",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='BBAlerts'  AND IsArchiveEnabled=1 AND ArchiveDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Archive_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "BBAlerts_Archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('BBAlerts_Archive').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "BBAlerts_Script",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "BBAlerts_Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCU_LogDBDev",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().SourceSchemaName}.@{item().SourceTableName}  WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))\n\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "BBAlerts_Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().SourceSchemaName}.@{item().SourceTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SCCUDEV_BBAlerts_Source",
											"type": "DatasetReference",
											"parameters": {
												"SourceDB": {
													"value": "@item().SourceDBName",
													"type": "Expression"
												},
												"SourceTable": {
													"value": "@item().SourceTableName",
													"type": "Expression"
												},
												"SourceSchema": {
													"value": "@item().SourceSchemaName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Archive_Destination",
											"type": "DatasetReference",
											"parameters": {
												"DestinationTable": "@item().DestinationTableName",
												"DestinationSchema": "@item().DestinationSchemaName"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "BBAlerts_Purge",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Archive_ForEach",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='BBAlerts' AND IsPurgeEnabled=1 AND PurgeDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Purge_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "BBAlerts_Purge",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('BBAlerts_Purge').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "BBAlerts_Purge_Script",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCU_ArchiveDev",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().DestinationSchemaName}.@{item().DestinationTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().PurgeDays}, CAST(GETDATE() AS DATE))",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SCCUDEV_ArchiveSqlDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_LogDBDev')]",
				"[concat(variables('factoryId'), '/datasets/SCCUDEV_BBAlerts_Source')]",
				"[concat(variables('factoryId'), '/datasets/Archive_Destination')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDEV_BusinessData_DynamicRetention')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BusinessData_Archive",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='BusinessData' AND IsArchiveEnabled=1 AND ArchiveDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Archive_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "BusinessData_Archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('BusinessData_Archive').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "BusinessData_Script",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "BusinessData_Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCU_BusinessDataDev",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().SourceSchemaName}.@{item().SourceTableName}  WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))\n\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "BusinessData_Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().SourceSchemaName}.@{item().SourceTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SCCUDev_BusinessData_Source",
											"type": "DatasetReference",
											"parameters": {
												"SourceDB": "@item().SourceDBName",
												"SourceTable": "@item().SourceTableName",
												"SourceSchema": "@item().SourceSchemaName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Archive_Destination",
											"type": "DatasetReference",
											"parameters": {
												"DestinationTable": "@item().DestinationTableName",
												"DestinationSchema": "@item().DestinationSchemaName"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "BusinessData_Purge",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Archive_ForEach",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='BusinessData' AND IsPurgeEnabled=1 AND PurgeDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Purge_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "BusinessData_Purge",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('BusinessData_Purge').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "BusinessData_Purge_Script",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCU_ArchiveDev",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().DestinationSchemaName}.@{item().DestinationTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().PurgeDays}, CAST(GETDATE() AS DATE))",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SCCUDEV_ArchiveSqlDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_BusinessDataDev')]",
				"[concat(variables('factoryId'), '/datasets/SCCUDev_BusinessData_Source')]",
				"[concat(variables('factoryId'), '/datasets/Archive_Destination')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDEV_LogDB_DynamicRetention')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LogDB_Archive_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='LogDb' AND IsArchiveEnabled=1 AND ArchiveDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Archive_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LogDB_Archive_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LogDB_Archive_LookUp').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "LogDb_Script",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "LogDb_Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCU_LogDBDev",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().SourceSchemaName}.@{item().SourceTableName}  WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))\n\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "LogDb_Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().SourceSchemaName}.@{item().SourceTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SCCUDev_LogDB_Source",
											"type": "DatasetReference",
											"parameters": {
												"SourceDB": "@item().SourceDBName",
												"SourceTable": "@item().SourceTableName",
												"SourceSchema": "@item().SourceSchemaName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Archive_Destination",
											"type": "DatasetReference",
											"parameters": {
												"DestinationTable": "@item().DestinationTableName",
												"DestinationSchema": "@item().DestinationSchemaName"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "LogDB_Purge_LookUp",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Archive_ForEach",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='LogDb' AND IsPurgeEnabled=1 AND PurgeDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Purge_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LogDB_Purge_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LogDB_Purge_LookUp').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "LogDb_Purge_Script",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCU_ArchiveDev",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().DestinationSchemaName}.@{item().DestinationTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().PurgeDays}, CAST(GETDATE() AS DATE))",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SCCUDEV_ArchiveSqlDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_LogDBDev')]",
				"[concat(variables('factoryId'), '/datasets/SCCUDev_LogDB_Source')]",
				"[concat(variables('factoryId'), '/datasets/Archive_Destination')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDev_Admin_LogDB_DynamicRetention')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Admin_LogDB_Archive_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='AdminLogDb' AND IsArchiveEnabled=1 AND ArchiveDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Admin_LogDB_Archive_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Admin_LogDB_Archive_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Admin_LogDB_Archive_LookUp').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "LogDb_Script",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Admin_LogDb_Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCUDev_Admin_LogDB",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().SourceSchemaName}.@{item().SourceTableName}  WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))\n\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Admin_LogDb_Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().SourceSchemaName}.@{item().SourceTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SCCUDev_Admin_LogDB_Source",
											"type": "DatasetReference",
											"parameters": {
												"SourceDB": "@item().SourceDBName",
												"SourceTable": "@item().SourceTableName",
												"SourceSchema": "@item().SourceSchemaName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Archive_Destination",
											"type": "DatasetReference",
											"parameters": {
												"DestinationTable": "@item().DestinationTableName",
												"DestinationSchema": "@item().DestinationSchemaName"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Admin_LogDB_Purge_LookUp",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Admin_LogDB_Archive_ForEach",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='AdminLogDb' AND IsPurgeEnabled=1 AND PurgeDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Admin_LogDB_Purge_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Admin_LogDB_Purge_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Admin_LogDB_Purge_LookUp').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "LogDb_Purge_Script",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCU_ArchiveDev",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().DestinationSchemaName}.@{item().DestinationTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().PurgeDays}, CAST(GETDATE() AS DATE))",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SCCUDEV_ArchiveSqlDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCUDev_Admin_LogDB')]",
				"[concat(variables('factoryId'), '/datasets/SCCUDev_Admin_LogDB_Source')]",
				"[concat(variables('factoryId'), '/datasets/Archive_Destination')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDev_Admin_MetaDB_DynamicRetention')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Admin_MetaDB_Archive_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='AdminMetaDb' AND IsArchiveEnabled=1 AND ArchiveDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Admin_MetaDB_Archive_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Admin_MetaDB_Archive_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Admin_MetaDB_Archive_LookUp').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "MetaDB_Script",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "MetaDB_Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCUDev_Admin_MetaDB",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().SourceSchemaName}.@{item().SourceTableName}  WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))\n\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "MetaDB_Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().SourceSchemaName}.@{item().SourceTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SCCUDev_Admin_MetaDB_Source",
											"type": "DatasetReference",
											"parameters": {
												"SourceDB": "@item().SourceDBName",
												"SourceTable": "@item().SourceTableName",
												"SourceSchema": "@item().SourceSchemaName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Archive_Destination",
											"type": "DatasetReference",
											"parameters": {
												"DestinationTable": "@item().DestinationTableName",
												"DestinationSchema": "@item().DestinationSchemaName"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Admin_METADB_Purge_LookUp",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Admin_MetaDB_Archive_ForEach",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='AdminMetaDb' AND IsPurgeEnabled=1 AND PurgeDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Admin_MetaDB_Purge_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Admin_METADB_Purge_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Admin_METADB_Purge_LookUp').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "MetaDb_Purge_Script",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCU_ArchiveDev",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().DestinationSchemaName}.@{item().DestinationTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().PurgeDays}, CAST(GETDATE() AS DATE))",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SCCUDEV_ArchiveSqlDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCUDev_Admin_MetaDB')]",
				"[concat(variables('factoryId'), '/datasets/SCCUDev_Admin_MetaDB_Source')]",
				"[concat(variables('factoryId'), '/datasets/Archive_Destination')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDev_Anonymous_LogDB_DynamicRetention')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Anonymous_LogDB_Archive_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='AnonymousLogDb' AND IsArchiveEnabled=1 AND ArchiveDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Anonymous_LogDB_Archive_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Anonymous_LogDB_Archive_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Anonymous_LogDB_Archive_LookUp').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "Anonymous_LogDb_Script",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Anonymous_LogDb_Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCUDev_Anonymous_LogDB",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().SourceSchemaName}.@{item().SourceTableName}  WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))\n\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Anonymous_LogDb_Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().SourceSchemaName}.@{item().SourceTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SCCUDev_Anonymous_LogDB_Source",
											"type": "DatasetReference",
											"parameters": {
												"SourceDB": "@item().SourceDBName",
												"SourceTable": "@item().SourceTableName",
												"SourceSchema": "@item().SourceSchemaName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Archive_Destination",
											"type": "DatasetReference",
											"parameters": {
												"DestinationTable": "@item().DestinationTableName",
												"DestinationSchema": "@item().DestinationSchemaName"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "LogDB_Purge_LookUp",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Anonymous_LogDB_Archive_ForEach",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='AnonymousLogDb' AND IsPurgeEnabled=1 AND PurgeDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Anonymous_LogDB_Purge_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LogDB_Purge_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LogDB_Purge_LookUp').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "LogDb_Purge_Script",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCU_ArchiveDev",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().DestinationSchemaName}.@{item().DestinationTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().PurgeDays}, CAST(GETDATE() AS DATE))",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SCCUDEV_ArchiveSqlDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCUDev_Anonymous_LogDB')]",
				"[concat(variables('factoryId'), '/datasets/SCCUDev_Anonymous_LogDB_Source')]",
				"[concat(variables('factoryId'), '/datasets/Archive_Destination')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDev_Anonymous_MetaDB_DynamicRetention')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Anonymous_MetaDB_Archive_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='AnonymousMetaDb' AND IsArchiveEnabled=1 AND ArchiveDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Anonymous_MetaDB_Archive_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Anonymous_MetaDB_Archive_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Anonymous_MetaDB_Archive_LookUp').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "Anonymous_MetaDB_Script",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Anonymous_MetaDB_Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCUDev_Anonymous_MetaDB",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().SourceSchemaName}.@{item().SourceTableName}  WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))\n\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "Anonymous_MetaDB_Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().SourceSchemaName}.@{item().SourceTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SCCUDev_Anonymous_MetaDB_Source",
											"type": "DatasetReference",
											"parameters": {
												"SourceDB": "@item().SourceDBName",
												"SourceTable": "@item().SourceTableName",
												"SourceSchema": "@item().SourceSchemaName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Archive_Destination",
											"type": "DatasetReference",
											"parameters": {
												"DestinationTable": "@item().DestinationTableName",
												"DestinationSchema": "@item().DestinationSchemaName"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "METADB_Purge_LookUp",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Anonymous_MetaDB_Archive_ForEach",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='AnonymousMetaDb' AND IsPurgeEnabled=1 AND PurgeDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Anonymous_MetaDB_Purge_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "METADB_Purge_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('METADB_Purge_LookUp').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "MetaDb_Purge_Script",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCU_ArchiveDev",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().DestinationSchemaName}.@{item().DestinationTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().PurgeDays}, CAST(GETDATE() AS DATE))",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SCCUDEV_ArchiveSqlDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCUDev_Anonymous_MetaDB')]",
				"[concat(variables('factoryId'), '/datasets/SCCUDev_Anonymous_MetaDB_Source')]",
				"[concat(variables('factoryId'), '/datasets/Archive_Destination')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDev_MetaDB_DynamicRetention')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MetaDB_Archive_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='MetaDb' AND IsArchiveEnabled=1 AND ArchiveDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Archive_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "MetaDB_Archive_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('MetaDB_Archive_LookUp').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "MetaDB_Script",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "MetaDB_Copy data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCU_MetaDBDev",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().SourceSchemaName}.@{item().SourceTableName}  WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))\n\n",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "MetaDB_Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().SourceSchemaName}.@{item().SourceTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SCCUDev_MetaDB_Source",
											"type": "DatasetReference",
											"parameters": {
												"SourceDB": "@item().SourceDBName",
												"SourceTable": {
													"value": "@item().SourceTableName",
													"type": "Expression"
												},
												"SourceSchema": {
													"value": "@item().SourceSchemaName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Archive_Destination",
											"type": "DatasetReference",
											"parameters": {
												"DestinationTable": "@item().DestinationTableName",
												"DestinationSchema": "@item().DestinationSchemaName"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "METADB_Purge_LookUp",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Archive_ForEach",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='MetaDb' AND IsPurgeEnabled=1 AND PurgeDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Purge_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "METADB_Purge_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('METADB_Purge_LookUp').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "MetaDb_Purge_Script",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCU_ArchiveDev",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().DestinationSchemaName}.@{item().DestinationTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().PurgeDays}, CAST(GETDATE() AS DATE))",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SCCUDEV_ArchiveSqlDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_MetaDBDev')]",
				"[concat(variables('factoryId'), '/datasets/SCCUDev_MetaDB_Source')]",
				"[concat(variables('factoryId'), '/datasets/Archive_Destination')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDoneProcessing_DEV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BBAlerts_Copy data1",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "SetStartingTime",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetCurrentTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[alert].[sps_ReferenceFileReport]",
								"storedProcedureParameters": {
									"FromDateTime": {
										"type": "String",
										"value": {
											"value": "@variables('StartingTime')",
											"type": "Expression"
										}
									},
									"IncidentIds": {
										"type": "String",
										"value": "[[102,104,105,106,107,108,109,110,60,15,9]"
									},
									"ToDateTime": {
										"type": "String",
										"value": {
											"value": "@variables('EndingTime')",
											"type": "Expression"
										}
									},
									"Types": {
										"type": "String",
										"value": "[[\"text\",\"email\"]"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SubscriptionID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SubscriptionID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MessageContent",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MessageContent",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DEV_BBAlertsDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_DoneProcessingDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GetLastProcessedDateTime",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT LastProcessedDateTime\nFROM ExternalAlertImportLog\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DEV_SQL_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SetStartingTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GetLastProcessedDateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "StartingTime",
							"value": {
								"value": "@formatDateTime(activity('GetLastProcessedDateTime').output.firstRow.LastProcessedDateTime, 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetCurrentTime",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "EndingTime",
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "UpdateLastProcessedDateTime",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "BBAlerts_Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataDev",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "UPDATE ExternalAlertImportLog\nSET LastProcessedDateTime = '@{variables('EndingTime')}'",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Count_Lookup",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SetStartingTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[alert].[sps_ReferenceFileReport]",
								"storedProcedureParameters": {
									"FromDateTime": {
										"type": "String",
										"value": {
											"value": "@variables('StartingTime')",
											"type": "Expression"
										}
									},
									"IncidentIds": {
										"type": "String",
										"value": "[[102,104,105,106,107,108,109,110,60,15,9]"
									},
									"ToDateTime": {
										"type": "String",
										"value": {
											"value": "@variables('EndingTime')",
											"type": "Expression"
										}
									},
									"Types": {
										"type": "String",
										"value": "[[\"text\",\"email\"]"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DEV_BBAlertsDataSet",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set_RowCount",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Count_Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RowCount",
							"value": {
								"value": "@length(activity('Count_Lookup').output.value)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Check_RowCount",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set_RowCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(variables('RowCount'), 0)\n",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "BBAlerts_Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[alert].[sps_ReferenceFileReport]",
											"storedProcedureParameters": {
												"FromDateTime": {
													"type": "String",
													"value": {
														"value": "@variables('StartingTime')",
														"type": "Expression"
													}
												},
												"IncidentIds": {
													"type": "String",
													"value": "[[102,104,105,106,107,108,109,110,60,15,9]"
												},
												"ToDateTime": {
													"type": "String",
													"value": {
														"value": "@variables('EndingTime')",
														"type": "Expression"
													}
												},
												"Types": {
													"type": "String",
													"value": "[[\"text\",\"email\"]"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SubscriptionID",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SubscriptionID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "Type",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "Type",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "MessageContent",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"name": "MessageContent",
														"type": "String",
														"physicalType": "String"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DEV_BBAlertsDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DEV_DoneProcessingDataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "UpdateLastProcessedDateTime_copy1",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Check_RowCount",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataDev",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "UPDATE ExternalAlertImportLog\nSET LastProcessedDateTime = '@{variables('EndingTime')}'",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"StartingTime": {
						"type": "String"
					},
					"EndingTime": {
						"type": "String"
					},
					"RowCount": {
						"type": "Integer"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DEV_BBAlertsDataSet')]",
				"[concat(variables('factoryId'), '/datasets/DEV_DoneProcessingDataSet')]",
				"[concat(variables('factoryId'), '/datasets/DEV_SQL_DataSet')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_BusinessDataDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCU_ADF_POC_DynamicRetention')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SCCU_ADF_POC_Archive",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE SourceDBName='SCCU_ADF_POC' AND IsArchiveEnabled=1 AND ArchiveDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUDEV_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "SCCU_ADF_POC_Archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('SCCU_ADF_POC_Archive').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "Script1",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "POC DB",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCU_ADFPOC",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().DestinationSchemaName}.@{item().DestinationTableName} ",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								},
								{
									"name": "POC DB",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().SourceSchemaName}.@{item().SourceTableName} WHERE CAST(LASTLOGINDATEUTC AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Poc_SecondaryUsersStaging",
											"type": "DatasetReference",
											"parameters": {
												"SourceDB": {
													"value": "@item().SourceDBName",
													"type": "Expression"
												},
												"SourceTable": {
													"value": "@item().SourceTableName",
													"type": "Expression"
												},
												"SourceSchema": {
													"value": "@item().SourceSchemaName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Archive_Destination",
											"type": "DatasetReference",
											"parameters": {
												"DestinationTable": "@item().DestinationTableName",
												"DestinationSchema": "@item().DestinationSchemaName"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SCCUDEV_ArchiveSqlDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ADFPOC')]",
				"[concat(variables('factoryId'), '/datasets/Poc_SecondaryUsersStaging')]",
				"[concat(variables('factoryId'), '/datasets/Archive_Destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCU_LoanDueAlerts_DEV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Count_LoanDueAlerts",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sps_LoanDueAlertSubscriptionToFile]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DEV_SQL_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set_RowCount_LoanDueAlerts",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Count_LoanDueAlerts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RowCount_LoanDueAlerts",
							"value": {
								"value": "@length(activity('Count_LoanDueAlerts').output.value)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Check_RowCount_LoanDueAlerts",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set_RowCount_LoanDueAlerts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(variables('RowCount_LoanDueAlerts'), 0)\n",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoanDueAlerts_Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "EXEC sps_LoanDueAlertSubscriptionToFile",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SubscriptionID",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SubscriptionID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "AccountID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "AccountID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "NumOfDaysBeforeDue",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "NumOfDaysBeforeDue",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "NumOfDaysAfterPastDue",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "NumOfDaysAfterPastDue",
														"type": "String",
														"physicalType": "String"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DEV_SQL_DataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DEV_LoanDue_DataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"RowCount_LoanDueAlerts": {
						"type": "Integer"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DEV_SQL_DataSet')]",
				"[concat(variables('factoryId'), '/datasets/DEV_LoanDue_DataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCU_LoanDueAlerts_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Count_LoanDueAlerts",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[sps_LoanDueAlertSubscriptionToFile]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "UAT_SQL_DataSet",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set_RowCount_LoanDueAlerts",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Count_LoanDueAlerts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RowCount_LoanDueAlerts",
							"value": {
								"value": "@length(activity('Count_LoanDueAlerts').output.value)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Check_RowCount_LoanDueAlerts",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set_RowCount_LoanDueAlerts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(variables('RowCount_LoanDueAlerts'), 0)\n",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoanDueAlerts_Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "EXEC sps_LoanDueAlertSubscriptionToFile",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "SubscriptionID",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "SubscriptionID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "AccountID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "AccountID",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "NumOfDaysBeforeDue",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "NumOfDaysBeforeDue",
														"type": "String",
														"physicalType": "String"
													}
												},
												{
													"source": {
														"name": "NumOfDaysAfterPastDue",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "NumOfDaysAfterPastDue",
														"type": "String",
														"physicalType": "String"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "UAT_SQL_DataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "UAT_LoanDue_DataSet",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"RowCount_LoanDueAlerts": {
						"type": "Integer"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UAT_SQL_DataSet')]",
				"[concat(variables('factoryId'), '/datasets/UAT_LoanDue_DataSet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Archive_Destination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DestinationTable": {
						"type": "string"
					},
					"DestinationSchema": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DataRetentionDatasets/Dynamic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().DestinationSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().DestinationTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEV_BBAlertsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_BBAlertsDev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "MigrationId",
						"type": "nvarchar"
					},
					{
						"name": "ProductVersion",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "__EFMigrationsHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_BBAlertsDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEV_CompletedLoanDueAlertsSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "DEV/CompletedLoanDueAlerts",
						"container": "to-nextly"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEV_CompletedLoanDueAlertsSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "DEV/CompletedLoanDueAlerts",
						"container": "to-nextly"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEV_CompletedThresholdSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "DEV/CompletedThreshold",
						"container": "to-nextly"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEV_CompletedThresholdSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "DEV/ThresholdAlerts",
						"container": "to-nextly"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEV_CompletedTransactionSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "DEV/CompletedTransaction",
						"container": "to-nextly"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEV_CompletedTransactionSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "DEV/TransactionAlerts",
						"container": "to-nextly"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEV_DoneProcessingDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "DoneProcessing@{formatDateTime(addHours(utcnow(), -4), 'MMddyyyyHHmm')}.txt",
							"type": "Expression"
						},
						"folderPath": "DEV/DoneProcessing",
						"container": "from-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "SubscriptionID",
						"type": "String"
					},
					{
						"name": "EMAIL",
						"type": "String"
					},
					{
						"name": "PHONE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEV_FormAPITxsSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_LogDBDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "WebServiceTxsID",
						"type": "decimal",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "DataSourceID",
						"type": "decimal",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "DatasourceName",
						"type": "varchar"
					},
					{
						"name": "FormName",
						"type": "varchar"
					},
					{
						"name": "CommandName",
						"type": "varchar"
					},
					{
						"name": "ContactId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserID",
						"type": "varchar"
					},
					{
						"name": "RequestDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ResponseDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RequestParameters",
						"type": "text"
					},
					{
						"name": "ResponseData",
						"type": "text"
					},
					{
						"name": "ErrorCode",
						"type": "varchar"
					},
					{
						"name": "ErrorData",
						"type": "text"
					},
					{
						"name": "TenantId",
						"type": "varchar"
					},
					{
						"name": "EnvCode",
						"type": "varchar"
					},
					{
						"name": "RequestType",
						"type": "varchar"
					},
					{
						"name": "CustomerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InnerException",
						"type": "text"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FormAPITxs"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_LogDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEV_GetExternalAlertRecipientsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "Alertsubscriber@{formatDateTime(addHours(utcnow(), -4), 'MMddyyyyHHmm')}.txt",
							"type": "Expression"
						},
						"folderPath": "DEV/Alertsubscriber",
						"container": "from-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEV_GetThresholdAlertSubscriptionsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "ThresholdAlert@{formatDateTime(addHours(utcnow(), -4), 'MMddyyyyHHmm')}.txt",
							"type": "Expression"
						},
						"folderPath": "DEV/ThresholdAlert",
						"container": "from-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEV_GetTransactionAlertSubscriptionDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "TransactionAlert@{formatDateTime(addHours(utcnow(), -4), 'MMddyyyyHHmm')}.txt",
							"type": "Expression"
						},
						"folderPath": "DEV/TransactionAlertSubscription",
						"container": "from-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEV_LoanDue_DataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "LoanDueAlerts@{formatDateTime(addHours(utcnow(), -4), 'MMddyyyyHHmm')}.txt",
							"type": "Expression"
						},
						"folderPath": "DEV/LoanDueAlerts",
						"container": "from-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEV_SQL_DataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_BusinessDataDev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Username",
						"type": "varchar"
					},
					{
						"name": "MemberNumber",
						"type": "varchar"
					},
					{
						"name": "PersonNumber",
						"type": "varchar"
					},
					{
						"name": "EAgreementNumber",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "Adaptive",
					"table": "AllowedUserOnly"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_BusinessDataDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_AF_Log4NetDBSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_LogDBDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AF_Log4NetDB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_LogDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ArchiveAF_Log4NetDBDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AF_Log4NetDB_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ArchiveBrowserTabInfoDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BrowserTabInfo_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ArchiveBrowserTabLogsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BrowserTabLogs_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ArchiveErrorLogDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ErrorLog_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ArchiveExternalRequestTxsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "WebServiceTxsID",
						"type": "decimal",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "DataSourceID",
						"type": "decimal",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "DatasourceName",
						"type": "varchar"
					},
					{
						"name": "FormName",
						"type": "varchar"
					},
					{
						"name": "CommandName",
						"type": "varchar"
					},
					{
						"name": "ContactId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserID",
						"type": "varchar"
					},
					{
						"name": "RequestDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ResponseDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RequestParameters",
						"type": "text"
					},
					{
						"name": "ResponseData",
						"type": "text"
					},
					{
						"name": "ErrorCode",
						"type": "varchar"
					},
					{
						"name": "ErrorData",
						"type": "text"
					},
					{
						"name": "TenantId",
						"type": "varchar"
					},
					{
						"name": "EnvCode",
						"type": "varchar"
					},
					{
						"name": "RequestType",
						"type": "varchar"
					},
					{
						"name": "CustomerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InnerException",
						"type": "text"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ExternalRequestTxs_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ArchiveFormAPITxsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FormAPITxs_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ArchiveNF_UserConnectionsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NF_UserConnections_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ArchivePasswordHistoryDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "PasswordHistory_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ArchiveRefreshTokensDataSe')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RefreshTokens_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ArchiveRulesLogDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RulesLog_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ArchiveSecurityLogDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SecurityLog_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ArchiveTempUserLoginValidationsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TempUserLoginValidations_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ArchiveTraceData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Message",
						"type": "varchar"
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "FormName",
						"type": "varchar"
					},
					{
						"name": "UserHostAddress",
						"type": "varchar"
					},
					{
						"name": "UserHostName",
						"type": "varchar"
					},
					{
						"name": "IP",
						"type": "varchar"
					},
					{
						"name": "URL",
						"type": "varchar"
					},
					{
						"name": "Browser",
						"type": "varchar"
					},
					{
						"name": "HasCookies",
						"type": "bit"
					},
					{
						"name": "InputType",
						"type": "varchar"
					},
					{
						"name": "IsMobileDevice",
						"type": "bit"
					},
					{
						"name": "BowserVersion",
						"type": "varchar"
					},
					{
						"name": "MobileDeviceManufacturer",
						"type": "varchar"
					},
					{
						"name": "MobileDeviceModel",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LogonUser",
						"type": "varchar"
					},
					{
						"name": "UserObjectGUID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TraceData_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ArchiveTransactionLog_JsonDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TransId",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "SessionId",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "ProcessId",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "TenantId",
						"type": "varchar"
					},
					{
						"name": "UserName",
						"type": "varchar"
					},
					{
						"name": "reference",
						"type": "varchar"
					},
					{
						"name": "Json",
						"type": "nvarchar"
					},
					{
						"name": "modifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TransactionLog_Json_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ArchiveTransactionLog_SqlDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TransactionLog_Sql_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ArchiveUserInvalidAttemptsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "WebServiceTxsID",
						"type": "decimal",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "DataSourceID",
						"type": "decimal",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "DatasourceName",
						"type": "varchar"
					},
					{
						"name": "FormName",
						"type": "varchar"
					},
					{
						"name": "CommandName",
						"type": "varchar"
					},
					{
						"name": "ContactId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserID",
						"type": "varchar"
					},
					{
						"name": "RequestDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ResponseDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RequestParameters",
						"type": "text"
					},
					{
						"name": "ResponseData",
						"type": "text"
					},
					{
						"name": "ErrorCode",
						"type": "varchar"
					},
					{
						"name": "ErrorData",
						"type": "text"
					},
					{
						"name": "TenantId",
						"type": "varchar"
					},
					{
						"name": "EnvCode",
						"type": "varchar"
					},
					{
						"name": "RequestType",
						"type": "varchar"
					},
					{
						"name": "CustomerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InnerException",
						"type": "text"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UserInvalidAttempts_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ArchiveUserLoginAttemptsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UserLoginAttempts_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ArchiveUserMappingConfigurationDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UserMappingConfiguration_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_BrowserTabInfoSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_LogDBDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BrowserTabInfo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_LogDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_BrowserTabLogsSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_LogDBDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BrowserTabLogs"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_LogDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_Copy_ArchiveErrorLogDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BrowserTabLogs_Archive_Duplicate"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ErrorLogSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_LogDBDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ErrorLog"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_LogDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ExternalRequestTxsSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_LogDBDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "WebServiceTxsID",
						"type": "decimal",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "DataSourceID",
						"type": "decimal",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "DatasourceName",
						"type": "varchar"
					},
					{
						"name": "FormName",
						"type": "varchar"
					},
					{
						"name": "CommandName",
						"type": "varchar"
					},
					{
						"name": "ContactId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserID",
						"type": "varchar"
					},
					{
						"name": "RequestDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ResponseDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RequestParameters",
						"type": "text"
					},
					{
						"name": "ResponseData",
						"type": "text"
					},
					{
						"name": "ErrorCode",
						"type": "varchar"
					},
					{
						"name": "ErrorData",
						"type": "text"
					},
					{
						"name": "TenantId",
						"type": "varchar"
					},
					{
						"name": "EnvCode",
						"type": "varchar"
					},
					{
						"name": "RequestType",
						"type": "varchar"
					},
					{
						"name": "CustomerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InnerException",
						"type": "text"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ExternalRequestTxs"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_LogDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_LoanDueAlertsSinkDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_BusinessDataDev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SubscriptionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmailContent",
						"type": "varchar"
					},
					{
						"name": "TextContent",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "External_LoanDueAlertStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_BusinessDataDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_LoanDueAlertsSourceDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TransactionFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "DEV/LoanDueAlerts",
						"container": "to-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_MasterLogSQLDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_LogDBDev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "IsArchiveEnabled",
						"type": "bit"
					},
					{
						"name": "ArchiveDays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsPurgeEnabled",
						"type": "bit"
					},
					{
						"name": "PurgeDays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TargetColumnName",
						"type": "varchar"
					},
					{
						"name": "SourceDBName",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "nvarchar"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TenantId",
						"type": "varchar"
					},
					{
						"name": "IsGroup",
						"type": "bit"
					},
					{
						"name": "GroupType",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "App_DataRetention"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_LogDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_NF_UserConnectionsSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_MetaDBDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TenantId",
						"type": "nvarchar"
					},
					{
						"name": "IP_Address",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NF_UserConnections"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_MetaDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_PasswordHistorySourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_MetaDBDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TenantId",
						"type": "nvarchar"
					},
					{
						"name": "IP_Address",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "PasswordHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_MetaDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_RefreshTokensSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_MetaDBDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TenantId",
						"type": "nvarchar"
					},
					{
						"name": "IP_Address",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RefreshTokens"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_MetaDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_RulesLogSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_MetaDBDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TenantId",
						"type": "nvarchar"
					},
					{
						"name": "IP_Address",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RulesLog"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_MetaDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_SecurityLogSourceDateSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_MetaDBDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TenantId",
						"type": "nvarchar"
					},
					{
						"name": "IP_Address",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SecurityLog"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_MetaDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_TempUserLoginValidationsSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_MetaDBDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TenantId",
						"type": "nvarchar"
					},
					{
						"name": "IP_Address",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TempUserLoginValidations"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_MetaDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ThresholdSinkDastaSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_BusinessDataDev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SubscriptionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BalanceAmount",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ExternalAlert_ThresholdStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_BusinessDataDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_ThresholdSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ThresholdFilename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().ThresholdFilename",
							"type": "Expression"
						},
						"folderPath": "DEV/ThresholdAlerts",
						"container": "to-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "SubscriptionID|BalanceAmount",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_TraceDataSourceData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_LogDBDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Message",
						"type": "varchar"
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "FormName",
						"type": "varchar"
					},
					{
						"name": "UserHostAddress",
						"type": "varchar"
					},
					{
						"name": "UserHostName",
						"type": "varchar"
					},
					{
						"name": "IP",
						"type": "varchar"
					},
					{
						"name": "URL",
						"type": "varchar"
					},
					{
						"name": "Browser",
						"type": "varchar"
					},
					{
						"name": "HasCookies",
						"type": "bit"
					},
					{
						"name": "InputType",
						"type": "varchar"
					},
					{
						"name": "IsMobileDevice",
						"type": "bit"
					},
					{
						"name": "BowserVersion",
						"type": "varchar"
					},
					{
						"name": "MobileDeviceManufacturer",
						"type": "varchar"
					},
					{
						"name": "MobileDeviceModel",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LogonUser",
						"type": "varchar"
					},
					{
						"name": "UserObjectGUID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TraceData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_LogDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_TransactionLog_JsonDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_LogDBDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TransId",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "SessionId",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "ProcessId",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "TenantId",
						"type": "varchar"
					},
					{
						"name": "UserName",
						"type": "varchar"
					},
					{
						"name": "reference",
						"type": "varchar"
					},
					{
						"name": "Json",
						"type": "nvarchar"
					},
					{
						"name": "modifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TransactionLog_Json"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_LogDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_TransactionLog_SqlSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_LogDBDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Message",
						"type": "varchar"
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "FormName",
						"type": "varchar"
					},
					{
						"name": "UserHostAddress",
						"type": "varchar"
					},
					{
						"name": "UserHostName",
						"type": "varchar"
					},
					{
						"name": "IP",
						"type": "varchar"
					},
					{
						"name": "URL",
						"type": "varchar"
					},
					{
						"name": "Browser",
						"type": "varchar"
					},
					{
						"name": "HasCookies",
						"type": "bit"
					},
					{
						"name": "InputType",
						"type": "varchar"
					},
					{
						"name": "IsMobileDevice",
						"type": "bit"
					},
					{
						"name": "BowserVersion",
						"type": "varchar"
					},
					{
						"name": "MobileDeviceManufacturer",
						"type": "varchar"
					},
					{
						"name": "MobileDeviceModel",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LogonUser",
						"type": "varchar"
					},
					{
						"name": "UserObjectGUID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TransactionLog_Sql"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_LogDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_TransactionSinkDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_BusinessDataDev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SubscriptionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmailContent",
						"type": "varchar"
					},
					{
						"name": "TextContent",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ExternalAlert_TransactionStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_BusinessDataDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_TransactionSourceDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TransactionFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "DEV/TransactionAlerts",
						"container": "to-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_UserInvalidAttemptsSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_MetaDBDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TenantId",
						"type": "nvarchar"
					},
					{
						"name": "IP_Address",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UserInvalidAttempts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_MetaDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_UserLoginAttemptsSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_LogDBDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TenantId",
						"type": "nvarchar"
					},
					{
						"name": "IP_Address",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UserLoginAttempts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_LogDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_UserMappingConfigurationSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_MetaDBDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TenantId",
						"type": "nvarchar"
					},
					{
						"name": "IP_Address",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UserMappingConfiguration"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_MetaDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Poc_SecondaryUsersStaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ADFPOC",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceDB": {
						"type": "string"
					},
					"SourceTable": {
						"type": "string"
					},
					"SourceSchema": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DataRetentionDatasets/Dynamic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SourceSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SourceTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ADFPOC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_AF_Log4NetDBSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_LogDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AF_Log4NetDB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_LogDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ArchiveAF_Log4NetDBDBDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_ArchiveDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AF_Log4NetDB_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_ArchiveDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ArchiveBrowserTabInfoDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_ArchiveDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BrowserTabInfo_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_ArchiveDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ArchiveBrowserTabLogsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_ArchiveDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BrowserTabLogs_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_ArchiveDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ArchiveErrorLogDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_ArchiveDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ErrorLog_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_ArchiveDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ArchiveExternalRequestTxsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_ArchiveDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "WebServiceTxsID",
						"type": "decimal",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "DataSourceID",
						"type": "decimal",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "DatasourceName",
						"type": "varchar"
					},
					{
						"name": "FormName",
						"type": "varchar"
					},
					{
						"name": "CommandName",
						"type": "varchar"
					},
					{
						"name": "ContactId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserID",
						"type": "varchar"
					},
					{
						"name": "RequestDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ResponseDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RequestParameters",
						"type": "text"
					},
					{
						"name": "ResponseData",
						"type": "text"
					},
					{
						"name": "ErrorCode",
						"type": "varchar"
					},
					{
						"name": "ErrorData",
						"type": "text"
					},
					{
						"name": "TenantId",
						"type": "varchar"
					},
					{
						"name": "EnvCode",
						"type": "varchar"
					},
					{
						"name": "RequestType",
						"type": "varchar"
					},
					{
						"name": "CustomerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InnerException",
						"type": "text"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ExternalRequestTxs_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_ArchiveDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ArchiveFormAPITxsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_ArchiveDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FormAPITxs_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_ArchiveDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ArchiveNF_UserConnectionsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_ArchiveDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NF_UserConnections_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_ArchiveDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ArchivePasswordHistoryDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_ArchiveDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "PasswordHistory_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_ArchiveDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ArchiveRefreshTokensDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_ArchiveDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RefreshTokens_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_ArchiveDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ArchiveRulesLogDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_ArchiveDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RulesLog_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_ArchiveDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ArchiveSecurityLogDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_ArchiveDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SecurityLog_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_ArchiveDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ArchiveTempUserLoginValidationsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_ArchiveDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TempUserLoginValidations_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_ArchiveDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ArchiveTraceData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_ArchiveDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Message",
						"type": "varchar"
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "FormName",
						"type": "varchar"
					},
					{
						"name": "UserHostAddress",
						"type": "varchar"
					},
					{
						"name": "UserHostName",
						"type": "varchar"
					},
					{
						"name": "IP",
						"type": "varchar"
					},
					{
						"name": "URL",
						"type": "varchar"
					},
					{
						"name": "Browser",
						"type": "varchar"
					},
					{
						"name": "HasCookies",
						"type": "bit"
					},
					{
						"name": "InputType",
						"type": "varchar"
					},
					{
						"name": "IsMobileDevice",
						"type": "bit"
					},
					{
						"name": "BowserVersion",
						"type": "varchar"
					},
					{
						"name": "MobileDeviceManufacturer",
						"type": "varchar"
					},
					{
						"name": "MobileDeviceModel",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LogonUser",
						"type": "varchar"
					},
					{
						"name": "UserObjectGUID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TraceData_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_ArchiveDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ArchiveTransactionLog_JsonDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_ArchiveDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TransId",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "SessionId",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "ProcessId",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "TenantId",
						"type": "varchar"
					},
					{
						"name": "UserName",
						"type": "varchar"
					},
					{
						"name": "reference",
						"type": "varchar"
					},
					{
						"name": "Json",
						"type": "nvarchar"
					},
					{
						"name": "modifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TransactionLog_Json_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_ArchiveDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ArchiveTransactionLog_SqlDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_ArchiveDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TransactionLog_Sql_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_ArchiveDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ArchiveUserInvalidAttemptsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_ArchiveDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "WebServiceTxsID",
						"type": "decimal",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "DataSourceID",
						"type": "decimal",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "DatasourceName",
						"type": "varchar"
					},
					{
						"name": "FormName",
						"type": "varchar"
					},
					{
						"name": "CommandName",
						"type": "varchar"
					},
					{
						"name": "ContactId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserID",
						"type": "varchar"
					},
					{
						"name": "RequestDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ResponseDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RequestParameters",
						"type": "text"
					},
					{
						"name": "ResponseData",
						"type": "text"
					},
					{
						"name": "ErrorCode",
						"type": "varchar"
					},
					{
						"name": "ErrorData",
						"type": "text"
					},
					{
						"name": "TenantId",
						"type": "varchar"
					},
					{
						"name": "EnvCode",
						"type": "varchar"
					},
					{
						"name": "RequestType",
						"type": "varchar"
					},
					{
						"name": "CustomerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InnerException",
						"type": "text"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UserInvalidAttempts_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_ArchiveDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ArchiveUserLoginAttemptsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_ArchiveDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UserLoginAttempts_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_ArchiveDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ArchiveUserMappingConfigurationDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_ArchiveDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UserMappingConfiguration_Archive"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_ArchiveDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_BrowserTabInfoSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_LogDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BrowserTabInfo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_LogDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_BrowserTabLogsSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_LogDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BrowserTabLogs"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_LogDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ErrorLogSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_LogDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ErrorLog"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_LogDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_ExternalRequestTxsSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_LogDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "WebServiceTxsID",
						"type": "decimal",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "DataSourceID",
						"type": "decimal",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "DatasourceName",
						"type": "varchar"
					},
					{
						"name": "FormName",
						"type": "varchar"
					},
					{
						"name": "CommandName",
						"type": "varchar"
					},
					{
						"name": "ContactId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserID",
						"type": "varchar"
					},
					{
						"name": "RequestDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ResponseDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RequestParameters",
						"type": "text"
					},
					{
						"name": "ResponseData",
						"type": "text"
					},
					{
						"name": "ErrorCode",
						"type": "varchar"
					},
					{
						"name": "ErrorData",
						"type": "text"
					},
					{
						"name": "TenantId",
						"type": "varchar"
					},
					{
						"name": "EnvCode",
						"type": "varchar"
					},
					{
						"name": "RequestType",
						"type": "varchar"
					},
					{
						"name": "CustomerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InnerException",
						"type": "text"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ExternalRequestTxs"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_LogDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_FormAPITxsSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_LogDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "WebServiceTxsID",
						"type": "decimal",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "DataSourceID",
						"type": "decimal",
						"precision": 15,
						"scale": 0
					},
					{
						"name": "DatasourceName",
						"type": "varchar"
					},
					{
						"name": "FormName",
						"type": "varchar"
					},
					{
						"name": "CommandName",
						"type": "varchar"
					},
					{
						"name": "ContactId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserID",
						"type": "varchar"
					},
					{
						"name": "RequestDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ResponseDateTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RequestParameters",
						"type": "text"
					},
					{
						"name": "ResponseData",
						"type": "text"
					},
					{
						"name": "ErrorCode",
						"type": "varchar"
					},
					{
						"name": "ErrorData",
						"type": "text"
					},
					{
						"name": "TenantId",
						"type": "varchar"
					},
					{
						"name": "EnvCode",
						"type": "varchar"
					},
					{
						"name": "RequestType",
						"type": "varchar"
					},
					{
						"name": "CustomerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InnerException",
						"type": "text"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FormAPITxs"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_LogDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_NF_UserConnectionsSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_MetaDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TenantId",
						"type": "nvarchar"
					},
					{
						"name": "IP_Address",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "NF_UserConnections"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_MetaDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_PasswordHistorySourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_MetaDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TenantId",
						"type": "nvarchar"
					},
					{
						"name": "IP_Address",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "PasswordHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_MetaDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_RefreshTokensSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_MetaDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TenantId",
						"type": "nvarchar"
					},
					{
						"name": "IP_Address",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RefreshTokens"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_MetaDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_RulesLogSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_MetaDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TenantId",
						"type": "nvarchar"
					},
					{
						"name": "IP_Address",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RulesLog"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_MetaDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_SecurityLogSourceDateSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_MetaDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TenantId",
						"type": "nvarchar"
					},
					{
						"name": "IP_Address",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SecurityLog"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_MetaDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_TempUserLoginValidationsSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_MetaDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TenantId",
						"type": "nvarchar"
					},
					{
						"name": "IP_Address",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TempUserLoginValidations"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_MetaDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_TraceDataSourceData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_LogDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Message",
						"type": "varchar"
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "FormName",
						"type": "varchar"
					},
					{
						"name": "UserHostAddress",
						"type": "varchar"
					},
					{
						"name": "UserHostName",
						"type": "varchar"
					},
					{
						"name": "IP",
						"type": "varchar"
					},
					{
						"name": "URL",
						"type": "varchar"
					},
					{
						"name": "Browser",
						"type": "varchar"
					},
					{
						"name": "HasCookies",
						"type": "bit"
					},
					{
						"name": "InputType",
						"type": "varchar"
					},
					{
						"name": "IsMobileDevice",
						"type": "bit"
					},
					{
						"name": "BowserVersion",
						"type": "varchar"
					},
					{
						"name": "MobileDeviceManufacturer",
						"type": "varchar"
					},
					{
						"name": "MobileDeviceModel",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LogonUser",
						"type": "varchar"
					},
					{
						"name": "UserObjectGUID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TraceData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_LogDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_TransactionLog_JsonDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_LogDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TransId",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "SessionId",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "ProcessId",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "TenantId",
						"type": "varchar"
					},
					{
						"name": "UserName",
						"type": "varchar"
					},
					{
						"name": "reference",
						"type": "varchar"
					},
					{
						"name": "Json",
						"type": "nvarchar"
					},
					{
						"name": "modifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TransactionLog_Json"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_LogDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_TransactionLog_SqlSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_LogDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Message",
						"type": "varchar"
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "FormName",
						"type": "varchar"
					},
					{
						"name": "UserHostAddress",
						"type": "varchar"
					},
					{
						"name": "UserHostName",
						"type": "varchar"
					},
					{
						"name": "IP",
						"type": "varchar"
					},
					{
						"name": "URL",
						"type": "varchar"
					},
					{
						"name": "Browser",
						"type": "varchar"
					},
					{
						"name": "HasCookies",
						"type": "bit"
					},
					{
						"name": "InputType",
						"type": "varchar"
					},
					{
						"name": "IsMobileDevice",
						"type": "bit"
					},
					{
						"name": "BowserVersion",
						"type": "varchar"
					},
					{
						"name": "MobileDeviceManufacturer",
						"type": "varchar"
					},
					{
						"name": "MobileDeviceModel",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LogonUser",
						"type": "varchar"
					},
					{
						"name": "UserObjectGUID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TransactionLog_Sql"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_LogDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_UserInvalidAttemptsSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_MetaDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TenantId",
						"type": "nvarchar"
					},
					{
						"name": "IP_Address",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UserInvalidAttempts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_MetaDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_UserLoginAttemptsSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_LogDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TenantId",
						"type": "nvarchar"
					},
					{
						"name": "IP_Address",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UserLoginAttempts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_LogDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/QA_UserMappingConfigurationSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUQA_MetaDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "ClientId",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "TenantId",
						"type": "nvarchar"
					},
					{
						"name": "IP_Address",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UserMappingConfiguration"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUQA_MetaDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDEV_ArchiveSqlDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_ArchiveDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataRetentionDatasets/Dynamic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DBName",
						"type": "varchar"
					},
					{
						"name": "SchemaName",
						"type": "varchar"
					},
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "KeyColumn",
						"type": "varchar"
					},
					{
						"name": "PurgeDays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ArchiveDays",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "MasterConfig"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_ArchiveDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDEV_BBAlerts_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_LogDBDev",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceDB": {
						"type": "string"
					},
					"SourceTable": {
						"type": "string"
					},
					"SourceSchema": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DataRetentionDatasets/Dynamic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SourceSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SourceTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_LogDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDev_Admin_LogDB_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUDev_Admin_LogDB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceDB": {
						"type": "string"
					},
					"SourceTable": {
						"type": "string"
					},
					"SourceSchema": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DataRetentionDatasets/Dynamic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SourceSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SourceTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUDev_Admin_LogDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDev_Admin_MetaDB_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUDev_Admin_MetaDB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceDB": {
						"type": "string"
					},
					"SourceTable": {
						"type": "string"
					},
					"SourceSchema": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DataRetentionDatasets/Dynamic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SourceSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SourceTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUDev_Admin_MetaDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDev_Anonymous_LogDB_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUDev_Anonymous_LogDB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceDB": {
						"type": "string"
					},
					"SourceTable": {
						"type": "string"
					},
					"SourceSchema": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DataRetentionDatasets/Dynamic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SourceSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SourceTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUDev_Anonymous_LogDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDev_Anonymous_MetaDB_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCUDev_Anonymous_MetaDB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceDB": {
						"type": "string"
					},
					"SourceTable": {
						"type": "string"
					},
					"SourceSchema": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DataRetentionDatasets/Dynamic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SourceSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SourceTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCUDev_Anonymous_MetaDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDev_BusinessData_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_BusinessDataDev",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceDB": {
						"type": "string"
					},
					"SourceTable": {
						"type": "string"
					},
					"SourceSchema": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DataRetentionDatasets/Dynamic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SourceSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SourceTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_BusinessDataDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDev_LogDB_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_LogDBDev",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceDB": {
						"type": "string"
					},
					"SourceTable": {
						"type": "string"
					},
					"SourceSchema": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DataRetentionDatasets/Dynamic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SourceSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SourceTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_LogDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDev_MetaDB_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_MetaDBDev",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceDB": {
						"type": "string"
					},
					"SourceTable": {
						"type": "string"
					},
					"SourceSchema": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DataRetentionDatasets/Dynamic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ErrorID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "FormID",
						"type": "varchar"
					},
					{
						"name": "SystemIP",
						"type": "varchar"
					},
					{
						"name": "SiteURL",
						"type": "nvarchar"
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Message",
						"type": "nvarchar"
					},
					{
						"name": "InnerException",
						"type": "nvarchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SourceSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SourceTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_MetaDBDev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_CompletedLoanDueAlertsSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "UAT/CompletedLoanDueAlerts",
						"container": "to-nextly"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_CompletedLoanDueAlertsSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "UAT/CompletedLoanDueAlerts",
						"container": "to-nextly"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_CompletedThresholdSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "UAT/CompletedThreshold",
						"container": "to-nextly"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_CompletedThresholdSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "UAT/ThresholdAlerts",
						"container": "to-nextly"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_CompletedTransactionSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "UAT/CompletedTransaction",
						"container": "to-nextly"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_CompletedTransactionSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "UAT/TransactionAlerts",
						"container": "to-nextly"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_LoanDue_DataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "LoanDueAlerts@{formatDateTime(addHours(utcnow(), -4), 'MMddyyyyHHmm')}.txt",
							"type": "Expression"
						},
						"folderPath": "UAT/LoanDueAlerts",
						"container": "from-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_SQL_DataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_BusinessDataUAT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Username",
						"type": "varchar"
					},
					{
						"name": "MemberNumber",
						"type": "varchar"
					},
					{
						"name": "PersonNumber",
						"type": "varchar"
					},
					{
						"name": "EAgreementNumber",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "Adaptive",
					"table": "ActivityLog"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_BusinessDataUAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_ThresholdSinkDastaSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_BusinessDataUAT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SubscriptionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BalanceAmount",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "",
					"table": "ExternalAlert_ThresholdStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_BusinessDataUAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_ThresholdSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ThresholdFilename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().ThresholdFilename",
							"type": "Expression"
						},
						"folderPath": "UAT/ThresholdAlerts",
						"container": "to-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "SubscriptionID|BalanceAmount",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_TransactionSinkDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_BusinessDataUAT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SubscriptionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmailContent",
						"type": "varchar"
					},
					{
						"name": "TextContent",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ExternalAlert_TransactionStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_BusinessDataUAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_TransactionSourceDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TransactionFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "UAT/TransactionAlerts",
						"container": "to-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Uat_LoanDueAlertsSinkDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_BusinessDataUAT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SubscriptionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmailContent",
						"type": "varchar"
					},
					{
						"name": "TextContent",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "External_LoanDueAlertStaging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_BusinessDataUAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Uat_LoanDueAlertsSourceDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TransactionFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "UAT/LoanDueAlerts",
						"container": "to-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCCU_DataFactory_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDev_Admin_LogDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SCCUDev_Admin_LogDB_properties_typeProperties_server')]",
					"database": "[parameters('SCCUDev_Admin_LogDB_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "UserAssignedManagedIdentity",
					"credential": {
						"referenceName": "Credentials_Dev",
						"type": "CredentialReference"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/credentials/Credentials_Dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDev_Admin_MetaDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SCCUDev_Admin_MetaDB_properties_typeProperties_server')]",
					"database": "[parameters('SCCUDev_Admin_MetaDB_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "UserAssignedManagedIdentity",
					"credential": {
						"referenceName": "Credentials_Dev",
						"type": "CredentialReference"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/credentials/Credentials_Dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDev_Anonymous_LogDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SCCUDev_Anonymous_LogDB_properties_typeProperties_server')]",
					"database": "[parameters('SCCUDev_Anonymous_LogDB_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "UserAssignedManagedIdentity",
					"credential": {
						"referenceName": "Credentials_Dev",
						"type": "CredentialReference"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/credentials/Credentials_Dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUDev_Anonymous_MetaDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SCCUDev_Anonymous_MetaDB_properties_typeProperties_server')]",
					"database": "[parameters('SCCUDev_Anonymous_MetaDB_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "UserAssignedManagedIdentity",
					"credential": {
						"referenceName": "Credentials_Dev",
						"type": "CredentialReference"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/credentials/Credentials_Dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUQA_ArchiveDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SCCUQA_ArchiveDB_properties_typeProperties_server')]",
					"database": "[parameters('SCCUQA_ArchiveDB_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "UserAssignedManagedIdentity",
					"credential": {
						"referenceName": "Credentials_QA",
						"type": "CredentialReference"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/credentials/Credentials_QA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUQA_LogDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SCCUQA_LogDB_properties_typeProperties_server')]",
					"database": "[parameters('SCCUQA_LogDB_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "UserAssignedManagedIdentity",
					"credential": {
						"referenceName": "Credentials_QA",
						"type": "CredentialReference"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/credentials/Credentials_QA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUQA_MetaDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SCCUQA_MetaDB_properties_typeProperties_server')]",
					"database": "[parameters('SCCUQA_MetaDB_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "UserAssignedManagedIdentity",
					"credential": {
						"referenceName": "Credentials_QA",
						"type": "CredentialReference"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/credentials/Credentials_QA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCU_ADFPOC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SCCU_ADFPOC_properties_typeProperties_server')]",
					"database": "[parameters('SCCU_ADFPOC_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "UserAssignedManagedIdentity",
					"credential": {
						"referenceName": "Credentials_Dev",
						"type": "CredentialReference"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/credentials/Credentials_Dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCU_ArchiveDev')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SCCU_ArchiveDev_properties_typeProperties_server')]",
					"database": "[parameters('SCCU_ArchiveDev_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "UserAssignedManagedIdentity",
					"credential": {
						"referenceName": "Credentials_Dev",
						"type": "CredentialReference"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/credentials/Credentials_Dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCU_BBAlertsDev')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SCCU_BBAlertsDev_properties_typeProperties_server')]",
					"database": "[parameters('SCCU_BBAlertsDev_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "UserAssignedManagedIdentity",
					"credential": {
						"referenceName": "Credentials_Dev",
						"type": "CredentialReference"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/credentials/Credentials_Dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCU_BBAlertsUAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SCCU_BBAlertsUAT_properties_typeProperties_server')]",
					"database": "[parameters('SCCU_BBAlertsUAT_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "UserAssignedManagedIdentity",
					"credential": {
						"referenceName": "Credentials_UAT",
						"type": "CredentialReference"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/credentials/Credentials_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCU_BusinessDataDev')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "For DEV SQL Server",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SCCU_BusinessDataDev_properties_typeProperties_server')]",
					"database": "[parameters('SCCU_BusinessDataDev_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "UserAssignedManagedIdentity",
					"credential": {
						"referenceName": "Credentials_Dev",
						"type": "CredentialReference"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/credentials/Credentials_Dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCU_BusinessDataUAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SCCU_BusinessDataUAT_properties_typeProperties_server')]",
					"database": "[parameters('SCCU_BusinessDataUAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "UserAssignedManagedIdentity",
					"credential": {
						"referenceName": "Credentials_UAT",
						"type": "CredentialReference"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/credentials/Credentials_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCU_DataFactory_Storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('SCCU_DataFactory_Storage_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2",
					"credential": {
						"referenceName": "Credentials_Storage",
						"type": "CredentialReference"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/credentials/Credentials_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCU_LogDBDev')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SCCU_LogDBDev_properties_typeProperties_server')]",
					"database": "[parameters('SCCU_LogDBDev_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "UserAssignedManagedIdentity",
					"credential": {
						"referenceName": "Credentials_Dev",
						"type": "CredentialReference"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/credentials/Credentials_Dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCU_MetaDBDev')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SCCU_MetaDBDev_properties_typeProperties_server')]",
					"database": "[parameters('SCCU_MetaDBDev_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "UserAssignedManagedIdentity",
					"credential": {
						"referenceName": "Credentials_Dev",
						"type": "CredentialReference"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/credentials/Credentials_Dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEV_ThresholdAlert')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/to-nextly/blobs/DEV/ThresholdAlerts/",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('DEV_ThresholdAlert_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEV_TransactionAlert')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/to-nextly/blobs/DEV/TransactionAlerts/",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('DEV_TransactionAlert_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataRetentionDynamicTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "DEV_DynamicRetention_Main",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-10-02T06:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/DEV_DynamicRetention_Main')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_Alerts_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SCCUAlerts_DEV",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2024-08-02T09:51:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SCCUAlerts_DEV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_DoneProcessing_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SCCUDoneProcessing_DEV",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 5,
						"startTime": "2024-08-03T01:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SCCUDoneProcessing_DEV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_LoanDueTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Nextly_LoanDueAlerts_DEV",
							"type": "PipelineReference"
						},
						"parameters": {
							"FileName": "[parameters('Dev_LoanDueTrigger_properties_Nextly_LoanDueAlerts_DEV_parameters_FileName')]",
							"FilePath": "[parameters('Dev_LoanDueTrigger_properties_Nextly_LoanDueAlerts_DEV_parameters_FilePath')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/to-nextly/blobs/DEV/LoanDueAlerts",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Dev_LoanDueTrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Nextly_LoanDueAlerts_DEV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_Sccu_LoanDueTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SCCU_LoanDueAlerts_DEV",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-09-21T06:30:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SCCU_LoanDueAlerts_DEV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RetentionLogTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "QA_Archive",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-09-27T07:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/QA_Archive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_DoneProcessing_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 5,
						"startTime": "2024-08-03T01:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_LoanDueTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Nextly_LoanDueAlerts_UAT",
							"type": "PipelineReference"
						},
						"parameters": {
							"FileName": "[parameters('UAT_LoanDueTrigger_properties_Nextly_LoanDueAlerts_UAT_parameters_FileName')]",
							"FilePath": "[parameters('UAT_LoanDueTrigger_properties_Nextly_LoanDueAlerts_UAT_parameters_FilePath')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/to-nextly/blobs/UAT/LoanDueAlerts",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('UAT_LoanDueTrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Nextly_LoanDueAlerts_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_TransactionAlert')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Nextly_TransactionAlert_UAT",
							"type": "PipelineReference"
						},
						"parameters": {
							"FileName": "[parameters('UAT_TransactionAlert_properties_Nextly_TransactionAlert_UAT_parameters_FileName')]",
							"FilePath": "[parameters('UAT_TransactionAlert_properties_Nextly_TransactionAlert_UAT_parameters_FilePath')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/to-nextly/blobs/UAT/TransactionAlerts",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('UAT_TransactionAlert_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Nextly_TransactionAlert_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_thresholdAlert')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Nextly_ThresholdAlert_UAT",
							"type": "PipelineReference"
						},
						"parameters": {
							"FileName": "[parameters('UAT_thresholdAlert_properties_Nextly_ThresholdAlert_UAT_parameters_FileName')]",
							"FilePath": "[parameters('UAT_thresholdAlert_properties_Nextly_ThresholdAlert_UAT_parameters_FilePath')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/to-nextly/blobs/UAT/ThresholdAlerts/",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('UAT_thresholdAlert_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Nextly_ThresholdAlert_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Uat_Alerts_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2024-08-03T01:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Uat_sccu_loanDueTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SCCU_LoanDueAlerts_UAT",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-09-23T18:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SCCU_LoanDueAlerts_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Credentials_Dev')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/a8cd236d-26bd-46eb-81fc-dea8aac0fe3c/resourcegroups/SCCU-EU-PROD-SRV-RG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/SCCU-EU-ADF"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Credentials_QA')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/a8cd236d-26bd-46eb-81fc-dea8aac0fe3c/resourcegroups/SCCU-EU-PROD-SRV-RG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/SCCU-EU-ADF"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Credentials_Storage')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/a8cd236d-26bd-46eb-81fc-dea8aac0fe3c/resourcegroups/SCCU-EU-PROD-SRV-RG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/SCCU-EU-ADF"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Credentials_UAT')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/a8cd236d-26bd-46eb-81fc-dea8aac0fe3c/resourcegroups/SCCU-EU-PROD-SRV-RG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/SCCU-EU-ADF"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/SCCU_DataFactory_FileShare')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('SCCU_DataFactory_FileShare_properties_privateLinkResourceId')]",
				"groupId": "[parameters('SCCU_DataFactory_FileShare_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/sccudatafactorystorage')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('sccudatafactorystorage_properties_privateLinkResourceId')]",
				"groupId": "[parameters('sccudatafactorystorage_properties_groupId')]",
				"fqdns": "[parameters('sccudatafactorystorage_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/sccudrsql01')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('sccudrsql01_properties_privateLinkResourceId')]",
				"groupId": "[parameters('sccudrsql01_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/sccuprodsql01')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('sccuprodsql01_properties_privateLinkResourceId')]",
				"groupId": "[parameters('sccuprodsql01_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}