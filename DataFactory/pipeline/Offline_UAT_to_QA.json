{
	"name": "Offline_UAT_to_QA",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "GetMetadata_DataSet",
						"type": "DatasetReference",
						"parameters": {
							"SubFolder": "@item()"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Filter1",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@and(not(equals(item().name, 'COMPLETED')), equals(item().type, 'Folder'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter1').output.Value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Get Metadata2",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DelimitedText8",
									"type": "DatasetReference",
									"parameters": {
										"FolderName": {
											"value": "@concat('offline-services/UAT/', item().name)",
											"type": "Expression"
										},
										"File": "*.csv"
									}
								},
								"fieldList": [
									"childItems"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Set variable2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "@concat('/UAT/', item().name)",
											"type": "Expression"
										},
										"wildcardFileName": {
											"value": "@if(\n    greater(length(activity('Get Metadata2').output.childItems), 0),\n    activity('Get Metadata2').output.childItems[0].name,\n    '*.csv'\n)\n",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "QA_SourceCopyFile",
									"type": "DatasetReference",
									"parameters": {
										"Foldername": {
											"value": "offline-services",
											"type": "Expression"
										},
										"file": {
											"value": "@if(\n    greater(length(activity('Get Metadata2').output.childItems), 0),\n    activity('Get Metadata2').output.childItems[0].name,\n    '*.csv'\n)\n",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "QA_SinkFileCopy",
									"type": "DatasetReference",
									"parameters": {
										"FolderName": {
											"value": "@concat('offline-services/QA/', item().name)",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Set variable2",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Get Metadata2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "FileName",
								"value": {
									"value": "@if(\n    greater(length(activity('Get Metadata2').output.childItems), 0),\n    activity('Get Metadata2').output.childItems[0].name,\n    'NoFile'\n)\n",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Copy data3",
							"type": "Copy",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "@concat('/UAT/', item().name)",
											"type": "Expression"
										},
										"wildcardFileName": {
											"value": "@if(\n    greater(length(activity('Get Metadata2').output.childItems), 0),\n    activity('Get Metadata2').output.childItems[0].name,\n    '*.csv'\n)\n",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "QA_SourceCopyFile",
									"type": "DatasetReference",
									"parameters": {
										"Foldername": {
											"value": "offline-services",
											"type": "Expression"
										},
										"file": {
											"value": "@if(\n    greater(length(activity('Get Metadata2').output.childItems), 0),\n    activity('Get Metadata2').output.childItems[0].name,\n    '*.csv'\n)\n",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "QA_SinkFileCopy",
									"type": "DatasetReference",
									"parameters": {
										"FolderName": {
											"value": "@concat('offline-services/DEV/', item().name)",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"variables": {
			"FileName": {
				"type": "String"
			},
			"sample": {
				"type": "String"
			}
		},
		"folder": {
			"name": "OfflineServices"
		},
		"annotations": []
	}
}