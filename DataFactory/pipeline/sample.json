{
	"name": "sample",
	"properties": {
		"activities": [
			{
				"name": "Execute Pipeline1",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Stored procedure1",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Failure_Email_Activity_Dynamic",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"subject": {
							"value": "@concat('Pipeline ', pipeline().Pipeline, ' is ', activity('Stored procedure1').status)\n",
							"type": "Expression"
						},
						"importance": {
							"value": "@if(equals(activity('Stored procedure1').status, 'Failed'), 'High', 'Normal')\n",
							"type": "Expression"
						},
						"content": {
							"value": "@concat('<h1>Pipeline ', pipeline().Pipeline, ' is ', activity('Stored procedure1').status,'</h1><table><tr><td><b>Pipeline Name:</b></td><td> ', pipeline().Pipeline, '</td></tr><tr><td><b>Error:</b> </td><td>', activity('Stored procedure1').output.errors[0].message,'</td></tr></table>')\n\n",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Stored procedure1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "SubscriptionID",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "SubscriptionID",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "FirstName",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "FirstName",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Description",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Description",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Amount",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "Amount",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 2,
									"precision": 18
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DelimitedText10",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Execute Pipeline2",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Stored procedure1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Completed_Email_Activity_Dynamic",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"subject": {
							"value": "@concat('Pipeline ', pipeline().Pipeline, ' is ', activity('Stored procedure1').status)\n",
							"type": "Expression"
						},
						"importance": {
							"value": "@if(equals(activity('Stored procedure1').status, 'Failed'), 'High', 'Normal')",
							"type": "Expression"
						},
						"content": {
							"value": "@concat('<h3>Pipeline ', pipeline().Pipeline, ' is ', activity('Stored procedure1').status,'</h3> <table><tr><td><b>Pipeline Name:</b></td><td> ', pipeline().Pipeline)",
							"type": "Expression"
						},
						"ToEmail": "  "
					}
				}
			}
		],
		"annotations": []
	}
}